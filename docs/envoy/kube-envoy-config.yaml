{
 "configs": [
  {
   "@type": "type.googleapis.com/envoy.admin.v3.BootstrapConfigDump",
   "bootstrap": {
    "node": {
     "id": "htt2lb_envoy_0",
     "cluster": "htt2lb_envoy",
     "user_agent_name": "envoy",
     "user_agent_build_version": {
      "version": {
       "major_number": 1,
       "minor_number": 22,
       "patch": 2
      },
      "metadata": {
       "build.type": "RELEASE",
       "revision.status": "Modified",
       "ssl.version": "BoringSSL",
       "revision.sha": "c919bdec19d79e97f4f56e4095706f8e6a383f1c"
      }
     },
     "extensions": [
      {
       "name": "envoy.compression.brotli.decompressor",
       "category": "envoy.compression.decompressor"
      },
      {
       "name": "envoy.compression.gzip.decompressor",
       "category": "envoy.compression.decompressor"
      },
      {
       "name": "envoy.compression.zstd.decompressor",
       "category": "envoy.compression.decompressor"
      },
      {
       "name": "envoy.transport_sockets.alts",
       "category": "envoy.transport_sockets.downstream"
      },
      {
       "name": "envoy.transport_sockets.quic",
       "category": "envoy.transport_sockets.downstream"
      },
      {
       "name": "envoy.transport_sockets.raw_buffer",
       "category": "envoy.transport_sockets.downstream"
      },
      {
       "name": "envoy.transport_sockets.starttls",
       "category": "envoy.transport_sockets.downstream"
      },
      {
       "name": "envoy.transport_sockets.tap",
       "category": "envoy.transport_sockets.downstream"
      },
      {
       "name": "envoy.transport_sockets.tcp_stats",
       "category": "envoy.transport_sockets.downstream"
      },
      {
       "name": "envoy.transport_sockets.tls",
       "category": "envoy.transport_sockets.downstream"
      },
      {
       "name": "raw_buffer",
       "category": "envoy.transport_sockets.downstream"
      },
      {
       "name": "starttls",
       "category": "envoy.transport_sockets.downstream"
      },
      {
       "name": "tls",
       "category": "envoy.transport_sockets.downstream"
      },
      {
       "name": "envoy.transport_sockets.alts",
       "category": "envoy.transport_sockets.upstream"
      },
      {
       "name": "envoy.transport_sockets.quic",
       "category": "envoy.transport_sockets.upstream"
      },
      {
       "name": "envoy.transport_sockets.raw_buffer",
       "category": "envoy.transport_sockets.upstream"
      },
      {
       "name": "envoy.transport_sockets.starttls",
       "category": "envoy.transport_sockets.upstream"
      },
      {
       "name": "envoy.transport_sockets.tap",
       "category": "envoy.transport_sockets.upstream"
      },
      {
       "name": "envoy.transport_sockets.tcp_stats",
       "category": "envoy.transport_sockets.upstream"
      },
      {
       "name": "envoy.transport_sockets.tls",
       "category": "envoy.transport_sockets.upstream"
      },
      {
       "name": "envoy.transport_sockets.upstream_proxy_protocol",
       "category": "envoy.transport_sockets.upstream"
      },
      {
       "name": "raw_buffer",
       "category": "envoy.transport_sockets.upstream"
      },
      {
       "name": "starttls",
       "category": "envoy.transport_sockets.upstream"
      },
      {
       "name": "tls",
       "category": "envoy.transport_sockets.upstream"
      },
      {
       "name": "auto",
       "category": "envoy.thrift_proxy.transports"
      },
      {
       "name": "framed",
       "category": "envoy.thrift_proxy.transports"
      },
      {
       "name": "header",
       "category": "envoy.thrift_proxy.transports"
      },
      {
       "name": "unframed",
       "category": "envoy.thrift_proxy.transports"
      },
      {
       "name": "envoy.wasm.runtime.null",
       "category": "envoy.wasm.runtime"
      },
      {
       "name": "envoy.wasm.runtime.v8",
       "category": "envoy.wasm.runtime"
      },
      {
       "name": "envoy.request_id.uuid",
       "category": "envoy.request_id"
      },
      {
       "name": "envoy.quic.crypto_stream.server.quiche",
       "category": "envoy.quic.server.crypto_stream"
      },
      {
       "name": "cryptomb",
       "category": "envoy.tls.key_providers"
      },
      {
       "name": "envoy.client_ssl_auth",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.echo",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.ext_authz",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.filters.network.client_ssl_auth",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.filters.network.connection_limit",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.filters.network.direct_response",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.filters.network.dubbo_proxy",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.filters.network.echo",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.filters.network.ext_authz",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.filters.network.http_connection_manager",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.filters.network.kafka_broker",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.filters.network.kafka_mesh",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.filters.network.local_ratelimit",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.filters.network.mongo_proxy",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.filters.network.mysql_proxy",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.filters.network.postgres_proxy",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.filters.network.ratelimit",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.filters.network.rbac",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.filters.network.redis_proxy",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.filters.network.rocketmq_proxy",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.filters.network.sip_proxy",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.filters.network.sni_cluster",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.filters.network.sni_dynamic_forward_proxy",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.filters.network.tcp_proxy",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.filters.network.thrift_proxy",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.filters.network.wasm",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.filters.network.zookeeper_proxy",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.http_connection_manager",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.mongo_proxy",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.ratelimit",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.redis_proxy",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.tcp_proxy",
       "category": "envoy.filters.network"
      },
      {
       "name": "envoy.quic.proof_source.filter_chain",
       "category": "envoy.quic.proof_source"
      },
      {
       "name": "envoy.matching.custom_matchers.trie_matcher",
       "category": "envoy.matching.network.custom_matchers"
      },
      {
       "name": "envoy.internal_redirect_predicates.allow_listed_routes",
       "category": "envoy.internal_redirect_predicates"
      },
      {
       "name": "envoy.internal_redirect_predicates.previous_routes",
       "category": "envoy.internal_redirect_predicates"
      },
      {
       "name": "envoy.internal_redirect_predicates.safe_cross_scheme",
       "category": "envoy.internal_redirect_predicates"
      },
      {
       "name": "envoy.filters.sip.router",
       "category": "envoy.sip_proxy.filters"
      },
      {
       "name": "envoy.matching.inputs.request_headers",
       "category": "envoy.matching.http.input"
      },
      {
       "name": "envoy.matching.inputs.request_trailers",
       "category": "envoy.matching.http.input"
      },
      {
       "name": "envoy.matching.inputs.response_headers",
       "category": "envoy.matching.http.input"
      },
      {
       "name": "envoy.matching.inputs.response_trailers",
       "category": "envoy.matching.http.input"
      },
      {
       "name": "default",
       "category": "network.connection.client"
      },
      {
       "name": "envoy_internal",
       "category": "network.connection.client"
      },
      {
       "name": "envoy.ip",
       "category": "envoy.resolvers"
      },
      {
       "name": "envoy.rate_limit_descriptors.expr",
       "category": "envoy.rate_limit_descriptors"
      },
      {
       "name": "envoy.bootstrap.internal_listener",
       "category": "envoy.bootstrap"
      },
      {
       "name": "envoy.bootstrap.wasm",
       "category": "envoy.bootstrap"
      },
      {
       "name": "envoy.extensions.network.socket_interface.default_socket_interface",
       "category": "envoy.bootstrap"
      },
      {
       "name": "composite-action",
       "category": "envoy.matching.action"
      },
      {
       "name": "skip",
       "category": "envoy.matching.action"
      },
      {
       "name": "envoy.key_value.file_based",
       "category": "envoy.common.key_value"
      },
      {
       "name": "envoy.network.dns_resolver.cares",
       "category": "envoy.network.dns_resolver"
      },
      {
       "name": "preserve_case",
       "category": "envoy.http.stateful_header_formatters"
      },
      {
       "name": "envoy.http.original_ip_detection.custom_header",
       "category": "envoy.http.original_ip_detection"
      },
      {
       "name": "envoy.http.original_ip_detection.xff",
       "category": "envoy.http.original_ip_detection"
      },
      {
       "name": "envoy.rbac.matchers.upstream_ip_port",
       "category": "envoy.rbac.matchers"
      },
      {
       "name": "envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
       "category": "envoy.upstream_options"
      },
      {
       "name": "envoy.upstreams.http.http_protocol_options",
       "category": "envoy.upstream_options"
      },
      {
       "name": "envoy.filters.connection_pools.tcp.generic",
       "category": "envoy.upstreams"
      },
      {
       "name": "envoy.compression.brotli.compressor",
       "category": "envoy.compression.compressor"
      },
      {
       "name": "envoy.compression.gzip.compressor",
       "category": "envoy.compression.compressor"
      },
      {
       "name": "envoy.compression.zstd.compressor",
       "category": "envoy.compression.compressor"
      },
      {
       "name": "envoy.matching.matchers.consistent_hashing",
       "category": "envoy.matching.input_matchers"
      },
      {
       "name": "envoy.matching.matchers.ip",
       "category": "envoy.matching.input_matchers"
      },
      {
       "name": "envoy.grpc_credentials.aws_iam",
       "category": "envoy.grpc_credentials"
      },
      {
       "name": "envoy.grpc_credentials.default",
       "category": "envoy.grpc_credentials"
      },
      {
       "name": "envoy.grpc_credentials.file_based_metadata",
       "category": "envoy.grpc_credentials"
      },
      {
       "name": "envoy.health_checkers.redis",
       "category": "envoy.health_checkers"
      },
      {
       "name": "envoy.access_loggers.extension_filters.cel",
       "category": "envoy.access_logger.extension_filters"
      },
      {
       "name": "envoy.matching.common_inputs.environment_variable",
       "category": "envoy.matching.common_inputs"
      },
      {
       "name": "envoy.filters.dubbo.router",
       "category": "envoy.dubbo_proxy.filters"
      },
      {
       "name": "envoy.access_loggers.file",
       "category": "envoy.access_loggers"
      },
      {
       "name": "envoy.access_loggers.http_grpc",
       "category": "envoy.access_loggers"
      },
      {
       "name": "envoy.access_loggers.open_telemetry",
       "category": "envoy.access_loggers"
      },
      {
       "name": "envoy.access_loggers.stderr",
       "category": "envoy.access_loggers"
      },
      {
       "name": "envoy.access_loggers.stdout",
       "category": "envoy.access_loggers"
      },
      {
       "name": "envoy.access_loggers.tcp_grpc",
       "category": "envoy.access_loggers"
      },
      {
       "name": "envoy.access_loggers.wasm",
       "category": "envoy.access_loggers"
      },
      {
       "name": "envoy.file_access_log",
       "category": "envoy.access_loggers"
      },
      {
       "name": "envoy.http_grpc_access_log",
       "category": "envoy.access_loggers"
      },
      {
       "name": "envoy.open_telemetry_access_log",
       "category": "envoy.access_loggers"
      },
      {
       "name": "envoy.stderr_access_log",
       "category": "envoy.access_loggers"
      },
      {
       "name": "envoy.stdout_access_log",
       "category": "envoy.access_loggers"
      },
      {
       "name": "envoy.tcp_grpc_access_log",
       "category": "envoy.access_loggers"
      },
      {
       "name": "envoy.wasm_access_log",
       "category": "envoy.access_loggers"
      },
      {
       "name": "envoy.config.validators.minimum_clusters",
       "category": "envoy.config.validators"
      },
      {
       "name": "envoy.config.validators.minimum_clusters_validator",
       "category": "envoy.config.validators"
      },
      {
       "name": "envoy.bandwidth_limit",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.buffer",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.cors",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.csrf",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.ext_authz",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.ext_proc",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.fault",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.adaptive_concurrency",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.admission_control",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.alternate_protocols_cache",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.aws_lambda",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.aws_request_signing",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.bandwidth_limit",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.buffer",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.cache",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.cdn_loop",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.composite",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.compressor",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.cors",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.csrf",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.decompressor",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.dynamic_forward_proxy",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.dynamo",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.ext_authz",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.ext_proc",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.fault",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.gcp_authn",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.grpc_http1_bridge",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.grpc_http1_reverse_bridge",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.grpc_json_transcoder",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.grpc_stats",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.grpc_web",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.header_to_metadata",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.health_check",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.ip_tagging",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.jwt_authn",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.language",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.local_ratelimit",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.lua",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.oauth2",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.on_demand",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.original_src",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.ratelimit",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.rbac",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.router",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.set_metadata",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.squash",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.stateful_session",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.sxg",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.tap",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.http.wasm",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.grpc_http1_bridge",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.grpc_json_transcoder",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.grpc_web",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.health_check",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.http_dynamo_filter",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.ip_tagging",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.local_rate_limit",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.lua",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.rate_limit",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.router",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.squash",
       "category": "envoy.filters.http"
      },
      {
       "name": "match-wrapper",
       "category": "envoy.filters.http"
      },
      {
       "name": "envoy.filters.udp.dns_filter",
       "category": "envoy.filters.udp_listener"
      },
      {
       "name": "envoy.filters.udp_listener.udp_proxy",
       "category": "envoy.filters.udp_listener"
      },
      {
       "name": "dubbo",
       "category": "envoy.dubbo_proxy.protocols"
      },
      {
       "name": "envoy.filters.listener.http_inspector",
       "category": "envoy.filters.listener"
      },
      {
       "name": "envoy.filters.listener.original_dst",
       "category": "envoy.filters.listener"
      },
      {
       "name": "envoy.filters.listener.original_src",
       "category": "envoy.filters.listener"
      },
      {
       "name": "envoy.filters.listener.proxy_protocol",
       "category": "envoy.filters.listener"
      },
      {
       "name": "envoy.filters.listener.tls_inspector",
       "category": "envoy.filters.listener"
      },
      {
       "name": "envoy.listener.http_inspector",
       "category": "envoy.filters.listener"
      },
      {
       "name": "envoy.listener.original_dst",
       "category": "envoy.filters.listener"
      },
      {
       "name": "envoy.listener.original_src",
       "category": "envoy.filters.listener"
      },
      {
       "name": "envoy.listener.proxy_protocol",
       "category": "envoy.filters.listener"
      },
      {
       "name": "envoy.listener.tls_inspector",
       "category": "envoy.filters.listener"
      },
      {
       "name": "envoy.resource_monitors.fixed_heap",
       "category": "envoy.resource_monitors"
      },
      {
       "name": "envoy.resource_monitors.injected_resource",
       "category": "envoy.resource_monitors"
      },
      {
       "name": "envoy.dog_statsd",
       "category": "envoy.stats_sinks"
      },
      {
       "name": "envoy.graphite_statsd",
       "category": "envoy.stats_sinks"
      },
      {
       "name": "envoy.metrics_service",
       "category": "envoy.stats_sinks"
      },
      {
       "name": "envoy.stat_sinks.dog_statsd",
       "category": "envoy.stats_sinks"
      },
      {
       "name": "envoy.stat_sinks.graphite_statsd",
       "category": "envoy.stats_sinks"
      },
      {
       "name": "envoy.stat_sinks.hystrix",
       "category": "envoy.stats_sinks"
      },
      {
       "name": "envoy.stat_sinks.metrics_service",
       "category": "envoy.stats_sinks"
      },
      {
       "name": "envoy.stat_sinks.statsd",
       "category": "envoy.stats_sinks"
      },
      {
       "name": "envoy.stat_sinks.wasm",
       "category": "envoy.stats_sinks"
      },
      {
       "name": "envoy.statsd",
       "category": "envoy.stats_sinks"
      },
      {
       "name": "envoy.filters.thrift.header_to_metadata",
       "category": "envoy.thrift_proxy.filters"
      },
      {
       "name": "envoy.filters.thrift.rate_limit",
       "category": "envoy.thrift_proxy.filters"
      },
      {
       "name": "envoy.filters.thrift.router",
       "category": "envoy.thrift_proxy.filters"
      },
      {
       "name": "envoy.cluster.eds",
       "category": "envoy.clusters"
      },
      {
       "name": "envoy.cluster.logical_dns",
       "category": "envoy.clusters"
      },
      {
       "name": "envoy.cluster.original_dst",
       "category": "envoy.clusters"
      },
      {
       "name": "envoy.cluster.static",
       "category": "envoy.clusters"
      },
      {
       "name": "envoy.cluster.strict_dns",
       "category": "envoy.clusters"
      },
      {
       "name": "envoy.clusters.aggregate",
       "category": "envoy.clusters"
      },
      {
       "name": "envoy.clusters.dynamic_forward_proxy",
       "category": "envoy.clusters"
      },
      {
       "name": "envoy.clusters.redis",
       "category": "envoy.clusters"
      },
      {
       "name": "envoy.dynamic.ot",
       "category": "envoy.tracers"
      },
      {
       "name": "envoy.lightstep",
       "category": "envoy.tracers"
      },
      {
       "name": "envoy.tracers.datadog",
       "category": "envoy.tracers"
      },
      {
       "name": "envoy.tracers.dynamic_ot",
       "category": "envoy.tracers"
      },
      {
       "name": "envoy.tracers.lightstep",
       "category": "envoy.tracers"
      },
      {
       "name": "envoy.tracers.opencensus",
       "category": "envoy.tracers"
      },
      {
       "name": "envoy.tracers.skywalking",
       "category": "envoy.tracers"
      },
      {
       "name": "envoy.tracers.xray",
       "category": "envoy.tracers"
      },
      {
       "name": "envoy.tracers.zipkin",
       "category": "envoy.tracers"
      },
      {
       "name": "envoy.zipkin",
       "category": "envoy.tracers"
      },
      {
       "name": "envoy.retry_priorities.previous_priorities",
       "category": "envoy.retry_priorities"
      },
      {
       "name": "envoy.retry_host_predicates.omit_canary_hosts",
       "category": "envoy.retry_host_predicates"
      },
      {
       "name": "envoy.retry_host_predicates.omit_host_metadata",
       "category": "envoy.retry_host_predicates"
      },
      {
       "name": "envoy.retry_host_predicates.previous_hosts",
       "category": "envoy.retry_host_predicates"
      },
      {
       "name": "auto",
       "category": "envoy.thrift_proxy.protocols"
      },
      {
       "name": "binary",
       "category": "envoy.thrift_proxy.protocols"
      },
      {
       "name": "binary/non-strict",
       "category": "envoy.thrift_proxy.protocols"
      },
      {
       "name": "compact",
       "category": "envoy.thrift_proxy.protocols"
      },
      {
       "name": "twitter",
       "category": "envoy.thrift_proxy.protocols"
      },
      {
       "name": "envoy.extensions.http.cache.simple",
       "category": "envoy.http.cache"
      },
      {
       "name": "envoy.watchdog.abort_action",
       "category": "envoy.guarddog_actions"
      },
      {
       "name": "envoy.watchdog.profile_action",
       "category": "envoy.guarddog_actions"
      },
      {
       "name": "envoy.tls.cert_validator.default",
       "category": "envoy.tls.cert_validator"
      },
      {
       "name": "envoy.tls.cert_validator.spiffe",
       "category": "envoy.tls.cert_validator"
      },
      {
       "name": "default",
       "category": "envoy.dubbo_proxy.route_matchers"
      },
      {
       "name": "envoy.http.stateful_session.cookie",
       "category": "envoy.http.stateful_session"
      },
      {
       "name": "envoy.formatter.metadata",
       "category": "envoy.formatter"
      },
      {
       "name": "envoy.formatter.req_without_query",
       "category": "envoy.formatter"
      },
      {
       "name": "envoy.matching.inputs.application_protocol",
       "category": "envoy.matching.network.input"
      },
      {
       "name": "envoy.matching.inputs.destination_ip",
       "category": "envoy.matching.network.input"
      },
      {
       "name": "envoy.matching.inputs.destination_port",
       "category": "envoy.matching.network.input"
      },
      {
       "name": "envoy.matching.inputs.direct_source_ip",
       "category": "envoy.matching.network.input"
      },
      {
       "name": "envoy.matching.inputs.server_name",
       "category": "envoy.matching.network.input"
      },
      {
       "name": "envoy.matching.inputs.source_ip",
       "category": "envoy.matching.network.input"
      },
      {
       "name": "envoy.matching.inputs.source_port",
       "category": "envoy.matching.network.input"
      },
      {
       "name": "envoy.matching.inputs.source_type",
       "category": "envoy.matching.network.input"
      },
      {
       "name": "envoy.matching.inputs.transport_protocol",
       "category": "envoy.matching.network.input"
      },
      {
       "name": "dubbo.hessian2",
       "category": "envoy.dubbo_proxy.serializers"
      }
     ]
    },
    "static_resources": {
     "listeners": [
      {
       "name": "externalIngress",
       "address": {
        "socket_address": {
         "address": "10.93.98.216",
         "port_value": 8080
        }
       },
       "filter_chains": [
        {
         "filters": [
          {
           "name": "envoy.filters.network.http_connection_manager",
           "typed_config": {
            "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
            "codec_type": "HTTP2",
            "stat_prefix": "http2ingress",
            "route_config": {
             "name": "externalIngress",
             "virtual_hosts": [
              {
               "name": "externalIngress",
               "domains": [
                "*"
               ],
               "routes": [
                {
                 "match": {
                  "prefix": "/nudm-uecm",
                  "case_sensitive": false
                 },
                 "route": {
                  "cluster": "nudm-uecm",
                  "timeout": "15s"
                 }
                },
                {
                 "match": {
                  "prefix": "/nudm-sdm",
                  "case_sensitive": false
                 },
                 "route": {
                  "cluster": "nudm-sdm",
                  "timeout": "15s"
                 }
                },
                {
                 "match": {
                  "prefix": "/nudm-ee",
                  "case_sensitive": false
                 },
                 "route": {
                  "cluster": "nudm-ee",
                  "timeout": "15s"
                 }
                },
                {
                 "match": {
                  "prefix": "/nudm-mt",
                  "case_sensitive": false
                 },
                 "route": {
                  "cluster": "nudm-mt",
                  "timeout": "15s"
                 }
                },
                {
                 "match": {
                  "prefix": "/nudm-niddau",
                  "case_sensitive": false
                 },
                 "route": {
                  "cluster": "nudm-niddau",
                  "timeout": "15s"
                 }
                },
                {
                 "match": {
                  "prefix": "/nudm-ueau",
                  "case_sensitive": false
                 },
                 "route": {
                  "cluster": "nudm-ueau",
                  "timeout": "15s"
                 }
                },
                {
                 "match": {
                  "prefix": "/nudm-pp",
                  "case_sensitive": false
                 },
                 "route": {
                  "cluster": "nudm-pp",
                  "timeout": "15s"
                 }
                },
                {
                 "match": {
                  "prefix": "/nnrf-",
                  "case_sensitive": false
                 },
                 "route": {
                  "cluster": "nim",
                  "timeout": "15s"
                 }
                },
                {
                 "match": {
                  "prefix": "/nausf-auth",
                  "case_sensitive": false
                 },
                 "route": {
                  "cluster": "nausf-auth",
                  "timeout": "15s"
                 }
                },
                {
                 "match": {
                  "prefix": "/nausf-sorprotection",
                  "case_sensitive": false
                 },
                 "route": {
                  "cluster": "nausf-sorprotection",
                  "timeout": "15s"
                 }
                },
                {
                 "match": {
                  "prefix": "/nausf-upuprotection",
                  "case_sensitive": false
                 },
                 "route": {
                  "cluster": "nausf-upuprotection",
                  "timeout": "15s"
                 }
                }
               ],
               "response_headers_to_remove": [
                "x-envoy-upstream-service-time"
               ]
              }
             ]
            },
            "http_filters": [
             {
              "name": "envoy.filters.http.lua",
              "typed_config": {
               "@type": "type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua",
               "inline_code": "function envoy_on_response(response_handle)\n  oci_header = response_handle:headers():get(\"3gpp-sbi-oci\")\n  lci_header = response_handle:headers():get(\"3gpp-sbi-lci\")\n  if oci_header ~= nil then\n    local _, j = string.find(oci_header,\"NF%-Service%-Instance: [a-z-]+\")\n    if(j ~= nil) then\n      response_handle:headers():replace(\"3gpp-sbi-oci\", oci_header:sub(1,j)..os.getenv(\"HOSTNAME\")..oci_header:sub(j+1))\n    end\n  end\n  if lci_header ~= nil then\n    local _, j = string.find(lci_header,\"NF%-Service%-Instance: [a-z-]+\")\n    if(j ~= nil) then\n      response_handle:headers():replace(\"3gpp-sbi-lci\", lci_header:sub(1,j)..os.getenv(\"HOSTNAME\")..lci_header:sub(j+1))\n    end\n  end\nend\n"
              }
             },
             {
              "name": "envoy.filters.http.router",
              "typed_config": {
               "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router",
               "suppress_envoy_headers": true
              }
             }
            ],
            "http2_protocol_options": {
             "max_concurrent_streams": 10000
            },
            "server_name": "udmServer",
            "access_log": [
             {
              "name": "envoy.access_loggers.file",
              "filter": {
               "or_filter": {
                "filters": [
                 {
                  "status_code_filter": {
                   "comparison": {
                    "op": "GE",
                    "value": {
                     "default_value": 300,
                     "runtime_key": "access_log.access_error.status"
                    }
                   }
                  }
                 },
                 {
                  "duration_filter": {
                   "comparison": {
                    "op": "GE",
                    "value": {
                     "default_value": 1000,
                     "runtime_key": "access_log.access_error.duration"
                    }
                   }
                  }
                 }
                ]
               }
              },
              "typed_config": {
               "@type": "type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog",
               "path": "/logstore/http2lbenvoylogs/access.log"
              }
             }
            ],
            "use_remote_address": true,
            "generate_request_id": true,
            "stream_idle_timeout": "0s",
            "server_header_transformation": "APPEND_IF_ABSENT",
            "common_http_protocol_options": {
             "idle_timeout": "0s"
            }
           }
          }
         ]
        }
       ],
       "socket_options": [
        {
         "description": "Enabling TCP Keepalive",
         "level": "1",
         "name": "9",
         "int_value": "1",
         "state": "STATE_LISTENING"
        },
        {
         "description": "Set Send buffer size",
         "level": "1",
         "name": "7",
         "int_value": "2097152"
        },
        {
         "description": "Set Receive buffer size",
         "level": "1",
         "name": "8",
         "int_value": "1048576"
        }
       ],
       "traffic_direction": "INBOUND"
      },
      {
       "name": "externalEgress",
       "address": {
        "socket_address": {
         "address": "192.168.34.118",
         "port_value": 9090
        }
       },
       "filter_chains": [
        {
         "filters": [
          {
           "name": "envoy.filters.network.http_connection_manager",
           "typed_config": {
            "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
            "codec_type": "HTTP2",
            "stat_prefix": "http2egress",
            "route_config": {
             "name": "externalEgress",
             "virtual_hosts": [
              {
               "name": "externalEgress",
               "domains": [
                "*"
               ],
               "routes": [
                {
                 "match": {
                  "prefix": "/",
                  "case_sensitive": false
                 },
                 "route": {
                  "cluster": "external-egress",
                  "timeout": "15s"
                 }
                }
               ]
              }
             ],
             "request_headers_to_remove": [
              "x-envoy-original-dst-host",
              "x-forwarded-proto",
              "x-request-id"
             ]
            },
            "http_filters": [
             {
              "name": "envoy.filters.http.lua",
              "typed_config": {
               "@type": "type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua",
               "inline_code": "function envoy_on_request(request_handle)\n  oci_header = request_handle:headers():get(\"3gpp-sbi-oci\")\n  lci_header = request_handle:headers():get(\"3gpp-sbi-lci\")\n  if oci_header ~= nil then\n    local _, j = string.find(oci_header,\"NF%-Service%-Instance: [a-z-]+\")\n    if(j ~= nil) then\n      request_handle:headers():replace(\"3gpp-sbi-oci\", oci_header:sub(1,j)..os.getenv(\"HOSTNAME\")..oci_header:sub(j+1))\n    end\n  end\n  if lci_header ~= nil then\n    local _, j = string.find(lci_header,\"NF%-Service%-Instance: [a-z-]+\")\n    if(j ~= nil) then\n      request_handle:headers():replace(\"3gpp-sbi-lci\", lci_header:sub(1,j)..os.getenv(\"HOSTNAME\")..lci_header:sub(j+1))\n    end\n  end\nend\n"
              }
             },
             {
              "name": "envoy.filters.http.router",
              "typed_config": {
               "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router",
               "suppress_envoy_headers": true
              }
             }
            ],
            "http2_protocol_options": {
             "max_concurrent_streams": 10000
            },
            "access_log": [
             {
              "name": "envoy.access_loggers.file",
              "filter": {
               "or_filter": {
                "filters": [
                 {
                  "status_code_filter": {
                   "comparison": {
                    "op": "GE",
                    "value": {
                     "default_value": 300,
                     "runtime_key": "access_log.access_error.status"
                    }
                   }
                  }
                 },
                 {
                  "duration_filter": {
                   "comparison": {
                    "op": "GE",
                    "value": {
                     "default_value": 1000,
                     "runtime_key": "access_log.access_error.duration"
                    }
                   }
                  }
                 }
                ]
               }
              },
              "typed_config": {
               "@type": "type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog",
               "path": "/logstore/http2lbenvoylogs/access.log"
              }
             }
            ],
            "server_header_transformation": "PASS_THROUGH"
           }
          }
         ],
         "transport_socket": {
          "name": "envoy.transport_sockets.tls",
          "typed_config": {
           "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext",
           "common_tls_context": {
            "tls_params": {
             "cipher_suites": [
              "AES256-SHA"
             ]
            },
            "tls_certificate_sds_secret_configs": [
             {
              "name": "int_cert_key",
              "sds_config": {
               "resource_api_version": "V3",
               "path_config_source": {
                "path": "/envoyconfig/sds_int_cert_key.yaml"
               }
              }
             }
            ],
            "validation_context_sds_secret_config": {
             "name": "int_validation_context",
             "sds_config": {
              "resource_api_version": "V3",
              "path_config_source": {
               "path": "/envoyconfig/sds_int_validation_context.yaml"
              }
             }
            }
           },
           "require_client_certificate": true
          }
         }
        }
       ],
       "listener_filters": [
        {
         "name": "envoy.filters.listener.original_dst",
         "typed_config": {
          "@type": "type.googleapis.com/envoy.extensions.filters.listener.original_dst.v3.OriginalDst"
         }
        }
       ],
       "traffic_direction": "OUTBOUND"
      }
     ],
     "clusters": [
      {
       "name": "external-egress",
       "type": "ORIGINAL_DST",
       "connect_timeout": "10s",
       "lb_policy": "CLUSTER_PROVIDED",
       "circuit_breakers": {
        "thresholds": [
         {
          "max_pending_requests": 40000,
          "max_requests": 40000
         }
        ]
       },
       "cleanup_interval": "3600s",
       "upstream_bind_config": {
        "source_address": {
         "address": "10.93.98.216",
         "port_value": 0
        },
        "socket_options": [
         {
          "description": "Set Send buffer size",
          "level": "1",
          "name": "7",
          "int_value": "2097152"
         },
         {
          "description": "Set Receive buffer size",
          "level": "1",
          "name": "8",
          "int_value": "1048576"
         }
        ]
       },
       "original_dst_lb_config": {
        "use_http_header": true
       },
       "typed_extension_protocol_options": {
        "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
         "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
         "explicit_http_config": {
          "http2_protocol_options": {}
         }
        }
       }
      },
      {
       "name": "nim",
       "type": "STRICT_DNS",
       "connect_timeout": "10s",
       "circuit_breakers": {
        "thresholds": [
         {
          "max_pending_requests": 40000,
          "max_requests": 40000
         }
        ]
       },
       "dns_refresh_rate": "1s",
       "transport_socket": {
        "name": "envoy.transport_sockets.tls",
        "typed_config": {
         "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
         "common_tls_context": {
          "tls_params": {
           "cipher_suites": [
            "AES256-SHA"
           ]
          },
          "tls_certificate_sds_secret_configs": [
           {
            "name": "int_cert_key",
            "sds_config": {
             "resource_api_version": "V3",
             "path_config_source": {
              "path": "/envoyconfig/sds_int_cert_key.yaml"
             }
            }
           }
          ],
          "validation_context_sds_secret_config": {
           "name": "int_validation_context",
           "sds_config": {
            "resource_api_version": "V3",
            "path_config_source": {
             "path": "/envoyconfig/sds_int_validation_context.yaml"
            }
           }
          }
         }
        }
       },
       "load_assignment": {
        "cluster_name": "nim",
        "endpoints": [
         {
          "lb_endpoints": [
           {
            "endpoint": {
             "address": {
              "socket_address": {
               "address": "nim.udm2.svc.cluster.local.",
               "port_value": 8080
              }
             }
            }
           }
          ]
         }
        ]
       },
       "typed_extension_protocol_options": {
        "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
         "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
         "explicit_http_config": {
          "http2_protocol_options": {}
         }
        }
       }
      },
      {
       "name": "nudm-uecm",
       "type": "STRICT_DNS",
       "connect_timeout": "10s",
       "circuit_breakers": {
        "thresholds": [
         {
          "max_pending_requests": 40000,
          "max_requests": 40000
         }
        ]
       },
       "dns_refresh_rate": "1s",
       "transport_socket": {
        "name": "envoy.transport_sockets.tls",
        "typed_config": {
         "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
         "common_tls_context": {
          "tls_params": {
           "cipher_suites": [
            "AES256-SHA"
           ]
          },
          "tls_certificate_sds_secret_configs": [
           {
            "name": "int_cert_key",
            "sds_config": {
             "resource_api_version": "V3",
             "path_config_source": {
              "path": "/envoyconfig/sds_int_cert_key.yaml"
             }
            }
           }
          ],
          "validation_context_sds_secret_config": {
           "name": "int_validation_context",
           "sds_config": {
            "resource_api_version": "V3",
            "path_config_source": {
             "path": "/envoyconfig/sds_int_validation_context.yaml"
            }
           }
          }
         }
        }
       },
       "load_assignment": {
        "cluster_name": "nudm-uecm",
        "endpoints": [
         {
          "lb_endpoints": [
           {
            "endpoint": {
             "address": {
              "socket_address": {
               "address": "nudm-uecm.udm2.svc.cluster.local.",
               "port_value": 8080
              }
             }
            }
           }
          ]
         }
        ]
       },
       "typed_extension_protocol_options": {
        "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
         "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
         "explicit_http_config": {
          "http2_protocol_options": {}
         }
        }
       }
      },
      {
       "name": "nudm-sdm",
       "type": "STRICT_DNS",
       "connect_timeout": "10s",
       "circuit_breakers": {
        "thresholds": [
         {
          "max_pending_requests": 40000,
          "max_requests": 40000
         }
        ]
       },
       "dns_refresh_rate": "1s",
       "transport_socket": {
        "name": "envoy.transport_sockets.tls",
        "typed_config": {
         "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
         "common_tls_context": {
          "tls_params": {
           "cipher_suites": [
            "AES256-SHA"
           ]
          },
          "tls_certificate_sds_secret_configs": [
           {
            "name": "int_cert_key",
            "sds_config": {
             "resource_api_version": "V3",
             "path_config_source": {
              "path": "/envoyconfig/sds_int_cert_key.yaml"
             }
            }
           }
          ],
          "validation_context_sds_secret_config": {
           "name": "int_validation_context",
           "sds_config": {
            "resource_api_version": "V3",
            "path_config_source": {
             "path": "/envoyconfig/sds_int_validation_context.yaml"
            }
           }
          }
         }
        }
       },
       "load_assignment": {
        "cluster_name": "nudm-sdm",
        "endpoints": [
         {
          "lb_endpoints": [
           {
            "endpoint": {
             "address": {
              "socket_address": {
               "address": "nudm-sdm.udm2.svc.cluster.local.",
               "port_value": 8080
              }
             }
            }
           }
          ]
         }
        ]
       },
       "typed_extension_protocol_options": {
        "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
         "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
         "explicit_http_config": {
          "http2_protocol_options": {}
         }
        }
       }
      },
      {
       "name": "nudm-ee",
       "type": "STRICT_DNS",
       "connect_timeout": "10s",
       "circuit_breakers": {
        "thresholds": [
         {
          "max_pending_requests": 40000,
          "max_requests": 40000
         }
        ]
       },
       "dns_refresh_rate": "1s",
       "transport_socket": {
        "name": "envoy.transport_sockets.tls",
        "typed_config": {
         "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
         "common_tls_context": {
          "tls_params": {
           "cipher_suites": [
            "AES256-SHA"
           ]
          },
          "tls_certificate_sds_secret_configs": [
           {
            "name": "int_cert_key",
            "sds_config": {
             "resource_api_version": "V3",
             "path_config_source": {
              "path": "/envoyconfig/sds_int_cert_key.yaml"
             }
            }
           }
          ],
          "validation_context_sds_secret_config": {
           "name": "int_validation_context",
           "sds_config": {
            "resource_api_version": "V3",
            "path_config_source": {
             "path": "/envoyconfig/sds_int_validation_context.yaml"
            }
           }
          }
         }
        }
       },
       "load_assignment": {
        "cluster_name": "nudm-ee",
        "endpoints": [
         {
          "lb_endpoints": [
           {
            "endpoint": {
             "address": {
              "socket_address": {
               "address": "nudm-ee.udm2.svc.cluster.local.",
               "port_value": 8080
              }
             }
            }
           }
          ]
         }
        ]
       },
       "typed_extension_protocol_options": {
        "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
         "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
         "explicit_http_config": {
          "http2_protocol_options": {}
         }
        }
       }
      },
      {
       "name": "nudm-mt",
       "type": "STRICT_DNS",
       "connect_timeout": "10s",
       "circuit_breakers": {
        "thresholds": [
         {
          "max_pending_requests": 40000,
          "max_requests": 40000
         }
        ]
       },
       "http2_protocol_options": {},
       "dns_refresh_rate": "1s",
       "transport_socket": {
        "name": "envoy.transport_sockets.tls",
        "typed_config": {
         "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
         "common_tls_context": {
          "tls_params": {
           "cipher_suites": [
            "AES256-SHA"
           ]
          },
          "tls_certificate_sds_secret_configs": [
           {
            "name": "int_cert_key",
            "sds_config": {
             "resource_api_version": "V3",
             "path_config_source": {
              "path": "/envoyconfig/sds_int_cert_key.yaml"
             }
            }
           }
          ],
          "validation_context_sds_secret_config": {
           "name": "int_validation_context",
           "sds_config": {
            "resource_api_version": "V3",
            "path_config_source": {
             "path": "/envoyconfig/sds_int_validation_context.yaml"
            }
           }
          }
         }
        }
       },
       "protocol_selection": "USE_DOWNSTREAM_PROTOCOL",
       "load_assignment": {
        "cluster_name": "nudm-mt",
        "endpoints": [
         {
          "lb_endpoints": [
           {
            "endpoint": {
             "address": {
              "socket_address": {
               "address": "nudm-mt.udm2.svc.cluster.local.",
               "port_value": 8080
              }
             }
            }
           }
          ]
         }
        ]
       }
      },
      {
       "name": "nudm-niddau",
       "type": "STRICT_DNS",
       "connect_timeout": "10s",
       "circuit_breakers": {
        "thresholds": [
         {
          "max_pending_requests": 40000,
          "max_requests": 40000
         }
        ]
       },
       "http2_protocol_options": {},
       "dns_refresh_rate": "1s",
       "transport_socket": {
        "name": "envoy.transport_sockets.tls",
        "typed_config": {
         "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
         "common_tls_context": {
          "tls_params": {
           "cipher_suites": [
            "AES256-SHA"
           ]
          },
          "tls_certificate_sds_secret_configs": [
           {
            "name": "int_cert_key",
            "sds_config": {
             "resource_api_version": "V3",
             "path_config_source": {
              "path": "/envoyconfig/sds_int_cert_key.yaml"
             }
            }
           }
          ],
          "validation_context_sds_secret_config": {
           "name": "int_validation_context",
           "sds_config": {
            "resource_api_version": "V3",
            "path_config_source": {
             "path": "/envoyconfig/sds_int_validation_context.yaml"
            }
           }
          }
         }
        }
       },
       "protocol_selection": "USE_DOWNSTREAM_PROTOCOL",
       "load_assignment": {
        "cluster_name": "nudm-niddau",
        "endpoints": [
         {
          "lb_endpoints": [
           {
            "endpoint": {
             "address": {
              "socket_address": {
               "address": "nudm-niddau.udm2.svc.cluster.local.",
               "port_value": 8080
              }
             }
            }
           }
          ]
         }
        ]
       }
      },
      {
       "name": "nausf-auth",
       "type": "STRICT_DNS",
       "connect_timeout": "10s",
       "circuit_breakers": {
        "thresholds": [
         {
          "max_pending_requests": 40000,
          "max_requests": 40000
         }
        ]
       },
       "dns_refresh_rate": "1s",
       "transport_socket": {
        "name": "envoy.transport_sockets.tls",
        "typed_config": {
         "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
         "common_tls_context": {
          "tls_params": {
           "cipher_suites": [
            "AES256-SHA"
           ]
          },
          "tls_certificate_sds_secret_configs": [
           {
            "name": "int_cert_key",
            "sds_config": {
             "resource_api_version": "V3",
             "path_config_source": {
              "path": "/envoyconfig/sds_int_cert_key.yaml"
             }
            }
           }
          ],
          "validation_context_sds_secret_config": {
           "name": "int_validation_context",
           "sds_config": {
            "resource_api_version": "V3",
            "path_config_source": {
             "path": "/envoyconfig/sds_int_validation_context.yaml"
            }
           }
          }
         }
        }
       },
       "load_assignment": {
        "cluster_name": "nausf-auth",
        "endpoints": [
         {
          "lb_endpoints": [
           {
            "endpoint": {
             "address": {
              "socket_address": {
               "address": "nausf-auth.udm2.svc.cluster.local.",
               "port_value": 8080
              }
             }
            }
           }
          ]
         }
        ]
       },
       "typed_extension_protocol_options": {
        "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
         "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
         "explicit_http_config": {
          "http2_protocol_options": {}
         }
        }
       }
      },
      {
       "name": "nausf-sorprotection",
       "type": "STRICT_DNS",
       "connect_timeout": "10s",
       "circuit_breakers": {
        "thresholds": [
         {
          "max_pending_requests": 40000,
          "max_requests": 40000
         }
        ]
       },
       "dns_refresh_rate": "1s",
       "transport_socket": {
        "name": "envoy.transport_sockets.tls",
        "typed_config": {
         "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
         "common_tls_context": {
          "tls_params": {
           "cipher_suites": [
            "AES256-SHA"
           ]
          },
          "tls_certificate_sds_secret_configs": [
           {
            "name": "int_cert_key",
            "sds_config": {
             "resource_api_version": "V3",
             "path_config_source": {
              "path": "/envoyconfig/sds_int_cert_key.yaml"
             }
            }
           }
          ],
          "validation_context_sds_secret_config": {
           "name": "int_validation_context",
           "sds_config": {
            "resource_api_version": "V3",
            "path_config_source": {
             "path": "/envoyconfig/sds_int_validation_context.yaml"
            }
           }
          }
         }
        }
       },
       "load_assignment": {
        "cluster_name": "nausf-sorprotection",
        "endpoints": [
         {
          "lb_endpoints": [
           {
            "endpoint": {
             "address": {
              "socket_address": {
               "address": "nausf-sorprotection.udm2.svc.cluster.local.",
               "port_value": 8080
              }
             }
            }
           }
          ]
         }
        ]
       },
       "typed_extension_protocol_options": {
        "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
         "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
         "explicit_http_config": {
          "http2_protocol_options": {}
         }
        }
       }
      },
      {
       "name": "nausf-upuprotection",
       "type": "STRICT_DNS",
       "connect_timeout": "10s",
       "circuit_breakers": {
        "thresholds": [
         {
          "max_pending_requests": 40000,
          "max_requests": 40000
         }
        ]
       },
       "dns_refresh_rate": "1s",
       "transport_socket": {
        "name": "envoy.transport_sockets.tls",
        "typed_config": {
         "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
         "common_tls_context": {
          "tls_params": {
           "cipher_suites": [
            "AES256-SHA"
           ]
          },
          "tls_certificate_sds_secret_configs": [
           {
            "name": "int_cert_key",
            "sds_config": {
             "resource_api_version": "V3",
             "path_config_source": {
              "path": "/envoyconfig/sds_int_cert_key.yaml"
             }
            }
           }
          ],
          "validation_context_sds_secret_config": {
           "name": "int_validation_context",
           "sds_config": {
            "resource_api_version": "V3",
            "path_config_source": {
             "path": "/envoyconfig/sds_int_validation_context.yaml"
            }
           }
          }
         }
        }
       },
       "load_assignment": {
        "cluster_name": "nausf-upuprotection",
        "endpoints": [
         {
          "lb_endpoints": [
           {
            "endpoint": {
             "address": {
              "socket_address": {
               "address": "nausf-upuprotection.udm2.svc.cluster.local.",
               "port_value": 8080
              }
             }
            }
           }
          ]
         }
        ]
       },
       "typed_extension_protocol_options": {
        "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
         "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
         "explicit_http_config": {
          "http2_protocol_options": {}
         }
        }
       }
      },
      {
       "name": "nudm-ueau",
       "type": "STRICT_DNS",
       "connect_timeout": "10s",
       "circuit_breakers": {
        "thresholds": [
         {
          "max_pending_requests": 40000,
          "max_requests": 40000
         }
        ]
       },
       "dns_refresh_rate": "1s",
       "transport_socket": {
        "name": "envoy.transport_sockets.tls",
        "typed_config": {
         "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
         "common_tls_context": {
          "tls_params": {
           "cipher_suites": [
            "AES256-SHA"
           ]
          },
          "tls_certificate_sds_secret_configs": [
           {
            "name": "int_cert_key",
            "sds_config": {
             "resource_api_version": "V3",
             "path_config_source": {
              "path": "/envoyconfig/sds_int_cert_key.yaml"
             }
            }
           }
          ],
          "validation_context_sds_secret_config": {
           "name": "int_validation_context",
           "sds_config": {
            "resource_api_version": "V3",
            "path_config_source": {
             "path": "/envoyconfig/sds_int_validation_context.yaml"
            }
           }
          }
         }
        }
       },
       "load_assignment": {
        "cluster_name": "nudm-ueau",
        "endpoints": [
         {
          "lb_endpoints": [
           {
            "endpoint": {
             "address": {
              "socket_address": {
               "address": "nudm-ueau.udm2.svc.cluster.local.",
               "port_value": 8080
              }
             }
            }
           }
          ]
         }
        ]
       },
       "typed_extension_protocol_options": {
        "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
         "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
         "explicit_http_config": {
          "http2_protocol_options": {}
         }
        }
       }
      },
      {
       "name": "nudm-pp",
       "type": "STRICT_DNS",
       "connect_timeout": "10s",
       "circuit_breakers": {
        "thresholds": [
         {
          "max_pending_requests": 40000,
          "max_requests": 40000
         }
        ]
       },
       "dns_refresh_rate": "1s",
       "transport_socket": {
        "name": "envoy.transport_sockets.tls",
        "typed_config": {
         "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
         "common_tls_context": {
          "tls_params": {
           "cipher_suites": [
            "AES256-SHA"
           ]
          },
          "tls_certificate_sds_secret_configs": [
           {
            "name": "int_cert_key",
            "sds_config": {
             "resource_api_version": "V3",
             "path_config_source": {
              "path": "/envoyconfig/sds_int_cert_key.yaml"
             }
            }
           }
          ],
          "validation_context_sds_secret_config": {
           "name": "int_validation_context",
           "sds_config": {
            "resource_api_version": "V3",
            "path_config_source": {
             "path": "/envoyconfig/sds_int_validation_context.yaml"
            }
           }
          }
         }
        }
       },
       "load_assignment": {
        "cluster_name": "nudm-pp",
        "endpoints": [
         {
          "lb_endpoints": [
           {
            "endpoint": {
             "address": {
              "socket_address": {
               "address": "nudm-pp.udm2.svc.cluster.local.",
               "port_value": 8080
              }
             }
            }
           }
          ]
         }
        ]
       },
       "typed_extension_protocol_options": {
        "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
         "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
         "explicit_http_config": {
          "http2_protocol_options": {}
         }
        }
       }
      }
     ]
    },
    "stats_flush_interval": "5s",
    "admin": {
     "address": {
      "socket_address": {
       "address": "192.168.34.118",
       "port_value": 9903
      }
     },
     "access_log": [
      {
       "name": "envoy.access_loggers.file",
       "filter": {
        "or_filter": {
         "filters": [
          {
           "status_code_filter": {
            "comparison": {
             "op": "GE",
             "value": {
              "default_value": 300,
              "runtime_key": "access_log.access_error.status"
             }
            }
           }
          },
          {
           "duration_filter": {
            "comparison": {
             "op": "GE",
             "value": {
              "default_value": 1000,
              "runtime_key": "access_log.access_error.duration"
             }
            }
           }
          }
         ]
        }
       },
       "typed_config": {
        "@type": "type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog",
        "path": "/logstore/http2lbenvoylogs/access.log"
       }
      }
     ]
    },
    "overload_manager": {
     "refresh_interval": "5s",
     "resource_monitors": [
      {
       "name": "envoy.resource_monitors.fixed_heap",
       "typed_config": {
        "@type": "type.googleapis.com/envoy.extensions.resource_monitors.fixed_heap.v3.FixedHeapConfig",
        "max_heap_size_bytes": "5368709120"
       }
      }
     ],
     "actions": [
      {
       "name": "envoy.overload_actions.shrink_heap",
       "triggers": [
        {
         "name": "envoy.resource_monitors.fixed_heap",
         "threshold": {
          "value": 0.6
         }
        }
       ]
      }
     ]
    }
   },
   "last_updated": "2022-08-29T08:25:25.443Z"
  },
  {
   "@type": "type.googleapis.com/envoy.admin.v3.ClustersConfigDump",
   "static_clusters": [
    {
     "cluster": {
      "@type": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
      "name": "external-egress",
      "type": "ORIGINAL_DST",
      "connect_timeout": "10s",
      "lb_policy": "CLUSTER_PROVIDED",
      "circuit_breakers": {
       "thresholds": [
        {
         "max_pending_requests": 40000,
         "max_requests": 40000
        }
       ]
      },
      "cleanup_interval": "3600s",
      "upstream_bind_config": {
       "source_address": {
        "address": "10.93.98.216",
        "port_value": 0
       },
       "socket_options": [
        {
         "description": "Set Send buffer size",
         "level": "1",
         "name": "7",
         "int_value": "2097152"
        },
        {
         "description": "Set Receive buffer size",
         "level": "1",
         "name": "8",
         "int_value": "1048576"
        }
       ]
      },
      "original_dst_lb_config": {
       "use_http_header": true
      },
      "typed_extension_protocol_options": {
       "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
        "explicit_http_config": {
         "http2_protocol_options": {}
        }
       }
      }
     },
     "last_updated": "2022-08-29T08:25:25.448Z"
    },
    {
     "cluster": {
      "@type": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
      "name": "nausf-auth",
      "type": "STRICT_DNS",
      "connect_timeout": "10s",
      "circuit_breakers": {
       "thresholds": [
        {
         "max_pending_requests": 40000,
         "max_requests": 40000
        }
       ]
      },
      "dns_refresh_rate": "1s",
      "transport_socket": {
       "name": "envoy.transport_sockets.tls",
       "typed_config": {
        "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
        "common_tls_context": {
         "tls_params": {
          "cipher_suites": [
           "AES256-SHA"
          ]
         },
         "tls_certificate_sds_secret_configs": [
          {
           "name": "int_cert_key",
           "sds_config": {
            "resource_api_version": "V3",
            "path_config_source": {
             "path": "/envoyconfig/sds_int_cert_key.yaml"
            }
           }
          }
         ],
         "validation_context_sds_secret_config": {
          "name": "int_validation_context",
          "sds_config": {
           "resource_api_version": "V3",
           "path_config_source": {
            "path": "/envoyconfig/sds_int_validation_context.yaml"
           }
          }
         }
        }
       }
      },
      "load_assignment": {
       "cluster_name": "nausf-auth",
       "endpoints": [
        {
         "lb_endpoints": [
          {
           "endpoint": {
            "address": {
             "socket_address": {
              "address": "nausf-auth.udm2.svc.cluster.local.",
              "port_value": 8080
             }
            }
           }
          }
         ]
        }
       ]
      },
      "typed_extension_protocol_options": {
       "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
        "explicit_http_config": {
         "http2_protocol_options": {}
        }
       }
      }
     },
     "last_updated": "2022-08-29T08:25:25.451Z"
    },
    {
     "cluster": {
      "@type": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
      "name": "nausf-sorprotection",
      "type": "STRICT_DNS",
      "connect_timeout": "10s",
      "circuit_breakers": {
       "thresholds": [
        {
         "max_pending_requests": 40000,
         "max_requests": 40000
        }
       ]
      },
      "dns_refresh_rate": "1s",
      "transport_socket": {
       "name": "envoy.transport_sockets.tls",
       "typed_config": {
        "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
        "common_tls_context": {
         "tls_params": {
          "cipher_suites": [
           "AES256-SHA"
          ]
         },
         "tls_certificate_sds_secret_configs": [
          {
           "name": "int_cert_key",
           "sds_config": {
            "resource_api_version": "V3",
            "path_config_source": {
             "path": "/envoyconfig/sds_int_cert_key.yaml"
            }
           }
          }
         ],
         "validation_context_sds_secret_config": {
          "name": "int_validation_context",
          "sds_config": {
           "resource_api_version": "V3",
           "path_config_source": {
            "path": "/envoyconfig/sds_int_validation_context.yaml"
           }
          }
         }
        }
       }
      },
      "load_assignment": {
       "cluster_name": "nausf-sorprotection",
       "endpoints": [
        {
         "lb_endpoints": [
          {
           "endpoint": {
            "address": {
             "socket_address": {
              "address": "nausf-sorprotection.udm2.svc.cluster.local.",
              "port_value": 8080
             }
            }
           }
          }
         ]
        }
       ]
      },
      "typed_extension_protocol_options": {
       "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
        "explicit_http_config": {
         "http2_protocol_options": {}
        }
       }
      }
     },
     "last_updated": "2022-08-29T08:25:25.452Z"
    },
    {
     "cluster": {
      "@type": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
      "name": "nausf-upuprotection",
      "type": "STRICT_DNS",
      "connect_timeout": "10s",
      "circuit_breakers": {
       "thresholds": [
        {
         "max_pending_requests": 40000,
         "max_requests": 40000
        }
       ]
      },
      "dns_refresh_rate": "1s",
      "transport_socket": {
       "name": "envoy.transport_sockets.tls",
       "typed_config": {
        "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
        "common_tls_context": {
         "tls_params": {
          "cipher_suites": [
           "AES256-SHA"
          ]
         },
         "tls_certificate_sds_secret_configs": [
          {
           "name": "int_cert_key",
           "sds_config": {
            "resource_api_version": "V3",
            "path_config_source": {
             "path": "/envoyconfig/sds_int_cert_key.yaml"
            }
           }
          }
         ],
         "validation_context_sds_secret_config": {
          "name": "int_validation_context",
          "sds_config": {
           "resource_api_version": "V3",
           "path_config_source": {
            "path": "/envoyconfig/sds_int_validation_context.yaml"
           }
          }
         }
        }
       }
      },
      "load_assignment": {
       "cluster_name": "nausf-upuprotection",
       "endpoints": [
        {
         "lb_endpoints": [
          {
           "endpoint": {
            "address": {
             "socket_address": {
              "address": "nausf-upuprotection.udm2.svc.cluster.local.",
              "port_value": 8080
             }
            }
           }
          }
         ]
        }
       ]
      },
      "typed_extension_protocol_options": {
       "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
        "explicit_http_config": {
         "http2_protocol_options": {}
        }
       }
      }
     },
     "last_updated": "2022-08-29T08:25:25.452Z"
    },
    {
     "cluster": {
      "@type": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
      "name": "nim",
      "type": "STRICT_DNS",
      "connect_timeout": "10s",
      "circuit_breakers": {
       "thresholds": [
        {
         "max_pending_requests": 40000,
         "max_requests": 40000
        }
       ]
      },
      "dns_refresh_rate": "1s",
      "transport_socket": {
       "name": "envoy.transport_sockets.tls",
       "typed_config": {
        "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
        "common_tls_context": {
         "tls_params": {
          "cipher_suites": [
           "AES256-SHA"
          ]
         },
         "tls_certificate_sds_secret_configs": [
          {
           "name": "int_cert_key",
           "sds_config": {
            "resource_api_version": "V3",
            "path_config_source": {
             "path": "/envoyconfig/sds_int_cert_key.yaml"
            }
           }
          }
         ],
         "validation_context_sds_secret_config": {
          "name": "int_validation_context",
          "sds_config": {
           "resource_api_version": "V3",
           "path_config_source": {
            "path": "/envoyconfig/sds_int_validation_context.yaml"
           }
          }
         }
        }
       }
      },
      "load_assignment": {
       "cluster_name": "nim",
       "endpoints": [
        {
         "lb_endpoints": [
          {
           "endpoint": {
            "address": {
             "socket_address": {
              "address": "nim.udm2.svc.cluster.local.",
              "port_value": 8080
             }
            }
           }
          }
         ]
        }
       ]
      },
      "typed_extension_protocol_options": {
       "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
        "explicit_http_config": {
         "http2_protocol_options": {}
        }
       }
      }
     },
     "last_updated": "2022-08-29T08:25:25.448Z"
    },
    {
     "cluster": {
      "@type": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
      "name": "nudm-ee",
      "type": "STRICT_DNS",
      "connect_timeout": "10s",
      "circuit_breakers": {
       "thresholds": [
        {
         "max_pending_requests": 40000,
         "max_requests": 40000
        }
       ]
      },
      "dns_refresh_rate": "1s",
      "transport_socket": {
       "name": "envoy.transport_sockets.tls",
       "typed_config": {
        "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
        "common_tls_context": {
         "tls_params": {
          "cipher_suites": [
           "AES256-SHA"
          ]
         },
         "tls_certificate_sds_secret_configs": [
          {
           "name": "int_cert_key",
           "sds_config": {
            "resource_api_version": "V3",
            "path_config_source": {
             "path": "/envoyconfig/sds_int_cert_key.yaml"
            }
           }
          }
         ],
         "validation_context_sds_secret_config": {
          "name": "int_validation_context",
          "sds_config": {
           "resource_api_version": "V3",
           "path_config_source": {
            "path": "/envoyconfig/sds_int_validation_context.yaml"
           }
          }
         }
        }
       }
      },
      "load_assignment": {
       "cluster_name": "nudm-ee",
       "endpoints": [
        {
         "lb_endpoints": [
          {
           "endpoint": {
            "address": {
             "socket_address": {
              "address": "nudm-ee.udm2.svc.cluster.local.",
              "port_value": 8080
             }
            }
           }
          }
         ]
        }
       ]
      },
      "typed_extension_protocol_options": {
       "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
        "explicit_http_config": {
         "http2_protocol_options": {}
        }
       }
      }
     },
     "last_updated": "2022-08-29T08:25:25.450Z"
    },
    {
     "cluster": {
      "@type": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
      "name": "nudm-mt",
      "type": "STRICT_DNS",
      "connect_timeout": "10s",
      "circuit_breakers": {
       "thresholds": [
        {
         "max_pending_requests": 40000,
         "max_requests": 40000
        }
       ]
      },
      "http2_protocol_options": {},
      "dns_refresh_rate": "1s",
      "transport_socket": {
       "name": "envoy.transport_sockets.tls",
       "typed_config": {
        "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
        "common_tls_context": {
         "tls_params": {
          "cipher_suites": [
           "AES256-SHA"
          ]
         },
         "tls_certificate_sds_secret_configs": [
          {
           "name": "int_cert_key",
           "sds_config": {
            "resource_api_version": "V3",
            "path_config_source": {
             "path": "/envoyconfig/sds_int_cert_key.yaml"
            }
           }
          }
         ],
         "validation_context_sds_secret_config": {
          "name": "int_validation_context",
          "sds_config": {
           "resource_api_version": "V3",
           "path_config_source": {
            "path": "/envoyconfig/sds_int_validation_context.yaml"
           }
          }
         }
        }
       }
      },
      "protocol_selection": "USE_DOWNSTREAM_PROTOCOL",
      "load_assignment": {
       "cluster_name": "nudm-mt",
       "endpoints": [
        {
         "lb_endpoints": [
          {
           "endpoint": {
            "address": {
             "socket_address": {
              "address": "nudm-mt.udm2.svc.cluster.local.",
              "port_value": 8080
             }
            }
           }
          }
         ]
        }
       ]
      }
     },
     "last_updated": "2022-08-29T08:25:25.450Z"
    },
    {
     "cluster": {
      "@type": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
      "name": "nudm-niddau",
      "type": "STRICT_DNS",
      "connect_timeout": "10s",
      "circuit_breakers": {
       "thresholds": [
        {
         "max_pending_requests": 40000,
         "max_requests": 40000
        }
       ]
      },
      "http2_protocol_options": {},
      "dns_refresh_rate": "1s",
      "transport_socket": {
       "name": "envoy.transport_sockets.tls",
       "typed_config": {
        "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
        "common_tls_context": {
         "tls_params": {
          "cipher_suites": [
           "AES256-SHA"
          ]
         },
         "tls_certificate_sds_secret_configs": [
          {
           "name": "int_cert_key",
           "sds_config": {
            "resource_api_version": "V3",
            "path_config_source": {
             "path": "/envoyconfig/sds_int_cert_key.yaml"
            }
           }
          }
         ],
         "validation_context_sds_secret_config": {
          "name": "int_validation_context",
          "sds_config": {
           "resource_api_version": "V3",
           "path_config_source": {
            "path": "/envoyconfig/sds_int_validation_context.yaml"
           }
          }
         }
        }
       }
      },
      "protocol_selection": "USE_DOWNSTREAM_PROTOCOL",
      "load_assignment": {
       "cluster_name": "nudm-niddau",
       "endpoints": [
        {
         "lb_endpoints": [
          {
           "endpoint": {
            "address": {
             "socket_address": {
              "address": "nudm-niddau.udm2.svc.cluster.local.",
              "port_value": 8080
             }
            }
           }
          }
         ]
        }
       ]
      }
     },
     "last_updated": "2022-08-29T08:25:25.451Z"
    },
    {
     "cluster": {
      "@type": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
      "name": "nudm-pp",
      "type": "STRICT_DNS",
      "connect_timeout": "10s",
      "circuit_breakers": {
       "thresholds": [
        {
         "max_pending_requests": 40000,
         "max_requests": 40000
        }
       ]
      },
      "dns_refresh_rate": "1s",
      "transport_socket": {
       "name": "envoy.transport_sockets.tls",
       "typed_config": {
        "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
        "common_tls_context": {
         "tls_params": {
          "cipher_suites": [
           "AES256-SHA"
          ]
         },
         "tls_certificate_sds_secret_configs": [
          {
           "name": "int_cert_key",
           "sds_config": {
            "resource_api_version": "V3",
            "path_config_source": {
             "path": "/envoyconfig/sds_int_cert_key.yaml"
            }
           }
          }
         ],
         "validation_context_sds_secret_config": {
          "name": "int_validation_context",
          "sds_config": {
           "resource_api_version": "V3",
           "path_config_source": {
            "path": "/envoyconfig/sds_int_validation_context.yaml"
           }
          }
         }
        }
       }
      },
      "load_assignment": {
       "cluster_name": "nudm-pp",
       "endpoints": [
        {
         "lb_endpoints": [
          {
           "endpoint": {
            "address": {
             "socket_address": {
              "address": "nudm-pp.udm2.svc.cluster.local.",
              "port_value": 8080
             }
            }
           }
          }
         ]
        }
       ]
      },
      "typed_extension_protocol_options": {
       "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
        "explicit_http_config": {
         "http2_protocol_options": {}
        }
       }
      }
     },
     "last_updated": "2022-08-29T08:25:25.453Z"
    },
    {
     "cluster": {
      "@type": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
      "name": "nudm-sdm",
      "type": "STRICT_DNS",
      "connect_timeout": "10s",
      "circuit_breakers": {
       "thresholds": [
        {
         "max_pending_requests": 40000,
         "max_requests": 40000
        }
       ]
      },
      "dns_refresh_rate": "1s",
      "transport_socket": {
       "name": "envoy.transport_sockets.tls",
       "typed_config": {
        "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
        "common_tls_context": {
         "tls_params": {
          "cipher_suites": [
           "AES256-SHA"
          ]
         },
         "tls_certificate_sds_secret_configs": [
          {
           "name": "int_cert_key",
           "sds_config": {
            "resource_api_version": "V3",
            "path_config_source": {
             "path": "/envoyconfig/sds_int_cert_key.yaml"
            }
           }
          }
         ],
         "validation_context_sds_secret_config": {
          "name": "int_validation_context",
          "sds_config": {
           "resource_api_version": "V3",
           "path_config_source": {
            "path": "/envoyconfig/sds_int_validation_context.yaml"
           }
          }
         }
        }
       }
      },
      "load_assignment": {
       "cluster_name": "nudm-sdm",
       "endpoints": [
        {
         "lb_endpoints": [
          {
           "endpoint": {
            "address": {
             "socket_address": {
              "address": "nudm-sdm.udm2.svc.cluster.local.",
              "port_value": 8080
             }
            }
           }
          }
         ]
        }
       ]
      },
      "typed_extension_protocol_options": {
       "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
        "explicit_http_config": {
         "http2_protocol_options": {}
        }
       }
      }
     },
     "last_updated": "2022-08-29T08:25:25.449Z"
    },
    {
     "cluster": {
      "@type": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
      "name": "nudm-ueau",
      "type": "STRICT_DNS",
      "connect_timeout": "10s",
      "circuit_breakers": {
       "thresholds": [
        {
         "max_pending_requests": 40000,
         "max_requests": 40000
        }
       ]
      },
      "dns_refresh_rate": "1s",
      "transport_socket": {
       "name": "envoy.transport_sockets.tls",
       "typed_config": {
        "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
        "common_tls_context": {
         "tls_params": {
          "cipher_suites": [
           "AES256-SHA"
          ]
         },
         "tls_certificate_sds_secret_configs": [
          {
           "name": "int_cert_key",
           "sds_config": {
            "resource_api_version": "V3",
            "path_config_source": {
             "path": "/envoyconfig/sds_int_cert_key.yaml"
            }
           }
          }
         ],
         "validation_context_sds_secret_config": {
          "name": "int_validation_context",
          "sds_config": {
           "resource_api_version": "V3",
           "path_config_source": {
            "path": "/envoyconfig/sds_int_validation_context.yaml"
           }
          }
         }
        }
       }
      },
      "load_assignment": {
       "cluster_name": "nudm-ueau",
       "endpoints": [
        {
         "lb_endpoints": [
          {
           "endpoint": {
            "address": {
             "socket_address": {
              "address": "nudm-ueau.udm2.svc.cluster.local.",
              "port_value": 8080
             }
            }
           }
          }
         ]
        }
       ]
      },
      "typed_extension_protocol_options": {
       "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
        "explicit_http_config": {
         "http2_protocol_options": {}
        }
       }
      }
     },
     "last_updated": "2022-08-29T08:25:25.453Z"
    },
    {
     "cluster": {
      "@type": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
      "name": "nudm-uecm",
      "type": "STRICT_DNS",
      "connect_timeout": "10s",
      "circuit_breakers": {
       "thresholds": [
        {
         "max_pending_requests": 40000,
         "max_requests": 40000
        }
       ]
      },
      "dns_refresh_rate": "1s",
      "transport_socket": {
       "name": "envoy.transport_sockets.tls",
       "typed_config": {
        "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
        "common_tls_context": {
         "tls_params": {
          "cipher_suites": [
           "AES256-SHA"
          ]
         },
         "tls_certificate_sds_secret_configs": [
          {
           "name": "int_cert_key",
           "sds_config": {
            "resource_api_version": "V3",
            "path_config_source": {
             "path": "/envoyconfig/sds_int_cert_key.yaml"
            }
           }
          }
         ],
         "validation_context_sds_secret_config": {
          "name": "int_validation_context",
          "sds_config": {
           "resource_api_version": "V3",
           "path_config_source": {
            "path": "/envoyconfig/sds_int_validation_context.yaml"
           }
          }
         }
        }
       }
      },
      "load_assignment": {
       "cluster_name": "nudm-uecm",
       "endpoints": [
        {
         "lb_endpoints": [
          {
           "endpoint": {
            "address": {
             "socket_address": {
              "address": "nudm-uecm.udm2.svc.cluster.local.",
              "port_value": 8080
             }
            }
           }
          }
         ]
        }
       ]
      },
      "typed_extension_protocol_options": {
       "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
        "explicit_http_config": {
         "http2_protocol_options": {}
        }
       }
      }
     },
     "last_updated": "2022-08-29T08:25:25.449Z"
    }
   ]
  },
  {
   "@type": "type.googleapis.com/envoy.admin.v3.ListenersConfigDump",
   "static_listeners": [
    {
     "listener": {
      "@type": "type.googleapis.com/envoy.config.listener.v3.Listener",
      "name": "externalIngress",
      "address": {
       "socket_address": {
        "address": "10.93.98.216",
        "port_value": 8080
       }
      },
      "filter_chains": [
       {
        "filters": [
         {
          "name": "envoy.filters.network.http_connection_manager",
          "typed_config": {
           "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
           "codec_type": "HTTP2",
           "stat_prefix": "http2ingress",
           "route_config": {
            "name": "externalIngress",
            "virtual_hosts": [
             {
              "name": "externalIngress",
              "domains": [
               "*"
              ],
              "routes": [
               {
                "match": {
                 "prefix": "/nudm-uecm",
                 "case_sensitive": false
                },
                "route": {
                 "cluster": "nudm-uecm",
                 "timeout": "15s"
                }
               },
               {
                "match": {
                 "prefix": "/nudm-sdm",
                 "case_sensitive": false
                },
                "route": {
                 "cluster": "nudm-sdm",
                 "timeout": "15s"
                }
               },
               {
                "match": {
                 "prefix": "/nudm-ee",
                 "case_sensitive": false
                },
                "route": {
                 "cluster": "nudm-ee",
                 "timeout": "15s"
                }
               },
               {
                "match": {
                 "prefix": "/nudm-mt",
                 "case_sensitive": false
                },
                "route": {
                 "cluster": "nudm-mt",
                 "timeout": "15s"
                }
               },
               {
                "match": {
                 "prefix": "/nudm-niddau",
                 "case_sensitive": false
                },
                "route": {
                 "cluster": "nudm-niddau",
                 "timeout": "15s"
                }
               },
               {
                "match": {
                 "prefix": "/nudm-ueau",
                 "case_sensitive": false
                },
                "route": {
                 "cluster": "nudm-ueau",
                 "timeout": "15s"
                }
               },
               {
                "match": {
                 "prefix": "/nudm-pp",
                 "case_sensitive": false
                },
                "route": {
                 "cluster": "nudm-pp",
                 "timeout": "15s"
                }
               },
               {
                "match": {
                 "prefix": "/nnrf-",
                 "case_sensitive": false
                },
                "route": {
                 "cluster": "nim",
                 "timeout": "15s"
                }
               },
               {
                "match": {
                 "prefix": "/nausf-auth",
                 "case_sensitive": false
                },
                "route": {
                 "cluster": "nausf-auth",
                 "timeout": "15s"
                }
               },
               {
                "match": {
                 "prefix": "/nausf-sorprotection",
                 "case_sensitive": false
                },
                "route": {
                 "cluster": "nausf-sorprotection",
                 "timeout": "15s"
                }
               },
               {
                "match": {
                 "prefix": "/nausf-upuprotection",
                 "case_sensitive": false
                },
                "route": {
                 "cluster": "nausf-upuprotection",
                 "timeout": "15s"
                }
               }
              ],
              "response_headers_to_remove": [
               "x-envoy-upstream-service-time"
              ]
             }
            ]
           },
           "http_filters": [
            {
             "name": "envoy.filters.http.lua",
             "typed_config": {
              "@type": "type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua",
              "inline_code": "function envoy_on_response(response_handle)\n  oci_header = response_handle:headers():get(\"3gpp-sbi-oci\")\n  lci_header = response_handle:headers():get(\"3gpp-sbi-lci\")\n  if oci_header ~= nil then\n    local _, j = string.find(oci_header,\"NF%-Service%-Instance: [a-z-]+\")\n    if(j ~= nil) then\n      response_handle:headers():replace(\"3gpp-sbi-oci\", oci_header:sub(1,j)..os.getenv(\"HOSTNAME\")..oci_header:sub(j+1))\n    end\n  end\n  if lci_header ~= nil then\n    local _, j = string.find(lci_header,\"NF%-Service%-Instance: [a-z-]+\")\n    if(j ~= nil) then\n      response_handle:headers():replace(\"3gpp-sbi-lci\", lci_header:sub(1,j)..os.getenv(\"HOSTNAME\")..lci_header:sub(j+1))\n    end\n  end\nend\n"
             }
            },
            {
             "name": "envoy.filters.http.router",
             "typed_config": {
              "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router",
              "suppress_envoy_headers": true
             }
            }
           ],
           "http2_protocol_options": {
            "max_concurrent_streams": 10000
           },
           "server_name": "udmServer",
           "access_log": [
            {
             "name": "envoy.access_loggers.file",
             "filter": {
              "or_filter": {
               "filters": [
                {
                 "status_code_filter": {
                  "comparison": {
                   "op": "GE",
                   "value": {
                    "default_value": 300,
                    "runtime_key": "access_log.access_error.status"
                   }
                  }
                 }
                },
                {
                 "duration_filter": {
                  "comparison": {
                   "op": "GE",
                   "value": {
                    "default_value": 1000,
                    "runtime_key": "access_log.access_error.duration"
                   }
                  }
                 }
                }
               ]
              }
             },
             "typed_config": {
              "@type": "type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog",
              "path": "/logstore/http2lbenvoylogs/access.log"
             }
            }
           ],
           "use_remote_address": true,
           "generate_request_id": true,
           "stream_idle_timeout": "0s",
           "server_header_transformation": "APPEND_IF_ABSENT",
           "common_http_protocol_options": {
            "idle_timeout": "0s"
           }
          }
         }
        ]
       }
      ],
      "socket_options": [
       {
        "description": "Enabling TCP Keepalive",
        "level": "1",
        "name": "9",
        "int_value": "1",
        "state": "STATE_LISTENING"
       },
       {
        "description": "Set Send buffer size",
        "level": "1",
        "name": "7",
        "int_value": "2097152"
       },
       {
        "description": "Set Receive buffer size",
        "level": "1",
        "name": "8",
        "int_value": "1048576"
       }
      ],
      "traffic_direction": "INBOUND"
     },
     "last_updated": "2022-08-29T08:25:25.460Z"
    },
    {
     "listener": {
      "@type": "type.googleapis.com/envoy.config.listener.v3.Listener",
      "name": "externalEgress",
      "address": {
       "socket_address": {
        "address": "192.168.34.118",
        "port_value": 9090
       }
      },
      "filter_chains": [
       {
        "filters": [
         {
          "name": "envoy.filters.network.http_connection_manager",
          "typed_config": {
           "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
           "codec_type": "HTTP2",
           "stat_prefix": "http2egress",
           "route_config": {
            "name": "externalEgress",
            "virtual_hosts": [
             {
              "name": "externalEgress",
              "domains": [
               "*"
              ],
              "routes": [
               {
                "match": {
                 "prefix": "/",
                 "case_sensitive": false
                },
                "route": {
                 "cluster": "external-egress",
                 "timeout": "15s"
                }
               }
              ]
             }
            ],
            "request_headers_to_remove": [
             "x-envoy-original-dst-host",
             "x-forwarded-proto",
             "x-request-id"
            ]
           },
           "http_filters": [
            {
             "name": "envoy.filters.http.lua",
             "typed_config": {
              "@type": "type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua",
              "inline_code": "function envoy_on_request(request_handle)\n  oci_header = request_handle:headers():get(\"3gpp-sbi-oci\")\n  lci_header = request_handle:headers():get(\"3gpp-sbi-lci\")\n  if oci_header ~= nil then\n    local _, j = string.find(oci_header,\"NF%-Service%-Instance: [a-z-]+\")\n    if(j ~= nil) then\n      request_handle:headers():replace(\"3gpp-sbi-oci\", oci_header:sub(1,j)..os.getenv(\"HOSTNAME\")..oci_header:sub(j+1))\n    end\n  end\n  if lci_header ~= nil then\n    local _, j = string.find(lci_header,\"NF%-Service%-Instance: [a-z-]+\")\n    if(j ~= nil) then\n      request_handle:headers():replace(\"3gpp-sbi-lci\", lci_header:sub(1,j)..os.getenv(\"HOSTNAME\")..lci_header:sub(j+1))\n    end\n  end\nend\n"
             }
            },
            {
             "name": "envoy.filters.http.router",
             "typed_config": {
              "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router",
              "suppress_envoy_headers": true
             }
            }
           ],
           "http2_protocol_options": {
            "max_concurrent_streams": 10000
           },
           "access_log": [
            {
             "name": "envoy.access_loggers.file",
             "filter": {
              "or_filter": {
               "filters": [
                {
                 "status_code_filter": {
                  "comparison": {
                   "op": "GE",
                   "value": {
                    "default_value": 300,
                    "runtime_key": "access_log.access_error.status"
                   }
                  }
                 }
                },
                {
                 "duration_filter": {
                  "comparison": {
                   "op": "GE",
                   "value": {
                    "default_value": 1000,
                    "runtime_key": "access_log.access_error.duration"
                   }
                  }
                 }
                }
               ]
              }
             },
             "typed_config": {
              "@type": "type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog",
              "path": "/logstore/http2lbenvoylogs/access.log"
             }
            }
           ],
           "server_header_transformation": "PASS_THROUGH"
          }
         }
        ],
        "transport_socket": {
         "name": "envoy.transport_sockets.tls",
         "typed_config": {
          "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext",
          "common_tls_context": {
           "tls_params": {
            "cipher_suites": [
             "AES256-SHA"
            ]
           },
           "tls_certificate_sds_secret_configs": [
            {
             "name": "int_cert_key",
             "sds_config": {
              "resource_api_version": "V3",
              "path_config_source": {
               "path": "/envoyconfig/sds_int_cert_key.yaml"
              }
             }
            }
           ],
           "validation_context_sds_secret_config": {
            "name": "int_validation_context",
            "sds_config": {
             "resource_api_version": "V3",
             "path_config_source": {
              "path": "/envoyconfig/sds_int_validation_context.yaml"
             }
            }
           }
          },
          "require_client_certificate": true
         }
        }
       }
      ],
      "listener_filters": [
       {
        "name": "envoy.filters.listener.original_dst",
        "typed_config": {
         "@type": "type.googleapis.com/envoy.extensions.filters.listener.original_dst.v3.OriginalDst"
        }
       }
      ],
      "traffic_direction": "OUTBOUND"
     },
     "last_updated": "2022-08-29T08:25:25.462Z"
    }
   ]
  },
  {
   "@type": "type.googleapis.com/envoy.admin.v3.ScopedRoutesConfigDump"
  },
  {
   "@type": "type.googleapis.com/envoy.admin.v3.RoutesConfigDump",
   "static_route_configs": [
    {
     "route_config": {
      "@type": "type.googleapis.com/envoy.config.route.v3.RouteConfiguration",
      "name": "externalEgress",
      "virtual_hosts": [
       {
        "name": "externalEgress",
        "domains": [
         "*"
        ],
        "routes": [
         {
          "match": {
           "prefix": "/",
           "case_sensitive": false
          },
          "route": {
           "cluster": "external-egress",
           "timeout": "15s"
          }
         }
        ]
       }
      ],
      "request_headers_to_remove": [
       "x-envoy-original-dst-host",
       "x-forwarded-proto",
       "x-request-id"
      ]
     },
     "last_updated": "2022-08-29T08:25:25.461Z"
    },
    {
     "route_config": {
      "@type": "type.googleapis.com/envoy.config.route.v3.RouteConfiguration",
      "name": "externalIngress",
      "virtual_hosts": [
       {
        "name": "externalIngress",
        "domains": [
         "*"
        ],
        "routes": [
         {
          "match": {
           "prefix": "/nudm-uecm",
           "case_sensitive": false
          },
          "route": {
           "cluster": "nudm-uecm",
           "timeout": "15s"
          }
         },
         {
          "match": {
           "prefix": "/nudm-sdm",
           "case_sensitive": false
          },
          "route": {
           "cluster": "nudm-sdm",
           "timeout": "15s"
          }
         },
         {
          "match": {
           "prefix": "/nudm-ee",
           "case_sensitive": false
          },
          "route": {
           "cluster": "nudm-ee",
           "timeout": "15s"
          }
         },
         {
          "match": {
           "prefix": "/nudm-mt",
           "case_sensitive": false
          },
          "route": {
           "cluster": "nudm-mt",
           "timeout": "15s"
          }
         },
         {
          "match": {
           "prefix": "/nudm-niddau",
           "case_sensitive": false
          },
          "route": {
           "cluster": "nudm-niddau",
           "timeout": "15s"
          }
         },
         {
          "match": {
           "prefix": "/nudm-ueau",
           "case_sensitive": false
          },
          "route": {
           "cluster": "nudm-ueau",
           "timeout": "15s"
          }
         },
         {
          "match": {
           "prefix": "/nudm-pp",
           "case_sensitive": false
          },
          "route": {
           "cluster": "nudm-pp",
           "timeout": "15s"
          }
         },
         {
          "match": {
           "prefix": "/nnrf-",
           "case_sensitive": false
          },
          "route": {
           "cluster": "nim",
           "timeout": "15s"
          }
         },
         {
          "match": {
           "prefix": "/nausf-auth",
           "case_sensitive": false
          },
          "route": {
           "cluster": "nausf-auth",
           "timeout": "15s"
          }
         },
         {
          "match": {
           "prefix": "/nausf-sorprotection",
           "case_sensitive": false
          },
          "route": {
           "cluster": "nausf-sorprotection",
           "timeout": "15s"
          }
         },
         {
          "match": {
           "prefix": "/nausf-upuprotection",
           "case_sensitive": false
          },
          "route": {
           "cluster": "nausf-upuprotection",
           "timeout": "15s"
          }
         }
        ],
        "response_headers_to_remove": [
         "x-envoy-upstream-service-time"
        ]
       }
      ]
     },
     "last_updated": "2022-08-29T08:25:25.457Z"
    }
   ]
  },
  {
   "@type": "type.googleapis.com/envoy.admin.v3.SecretsConfigDump",
   "dynamic_active_secrets": [
    {
     "name": "int_cert_key",
     "last_updated": "2022-08-29T08:25:25.464Z",
     "secret": {
      "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.Secret",
      "name": "int_cert_key",
      "tls_certificate": {
       "certificate_chain": {
        "inline_bytes": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQXZtZ0F3SUJBZ0lVUmhwcWVKTkRaakRmSWpmMGl2WUJhNWtXQ0Nvd0NnWUlLb1pJemowRUF3SXcKTERFTE1Ba0dBMVVFQmhNQ1Jra3hEakFNQmdOVkJBb1RCVzV2YTJsaE1RMHdDd1lEVlFRREV3UjZkSE14TUI0WApEVEl5TURneU9UQTRNalV5TWxvWERUSTNNRGd5T1RBNE1qVXlNbG93TVRFTE1Ba0dBMVVFQmhNQ1NVNHhEakFNCkJnTlZCQW9UQlc1dmEybGhNUkl3RUFZRFZRUURFd2x1YjJ0cFlTNWpiMjB3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUM2dFVDUUNCaytzMkpkM3FpeFhXa0dyMmZVblBRdjlhK3RENzZHRGNHdwowWStNcGEyU0hEOHZadmpHSVBSN0JLZ0NPNWZFeEZtUk81U3g4OFNnQ0xsT3JCZS93Qnk1OC9rWGNOY1lGWS9WCjErZVF3Z3JqdXBPcFVSZnFCeGJQbmE3WGR5RDhpbEg5VHIwUFEyWUliN0pIUEQ5am4zS3B6cEZRZlQ0UEF1TWgKcG8yREpxQ0FKcWRWcE1FcEJFc2RmTms3Z2gzNlJIWm5CSzZUbFJoNEpHcS8vdnZEU2tjU2Q0bzJydm9pRmI4VgpYTytLdXlQU29Vb1AwT05QSXlsakdZbFdGVEJzRlQrR1A3TFJna0tQN0pxZVRqb2FpVTVUb0doUVhhdVU4V1pICkRDak83ZnRqZ3dQMi9Fd3JxSmErak4yL3FiUXo3TUdaUDJ6SGZybmJ0M0lYQWdNQkFBR2pnZ0VuTUlJQkl6QXoKQmdOVkhSRUVMREFxZ2dsdWIydHBZUzVqYjIySEJNQ29JbmFIQkFwZFl0aUNFV2gwZEhBeWJHSXVibTlyYVdFdQpZMjl0TUF3R0ExVWRFd0VCL3dRQ01BQXdOd1lJS3dZQkJRVUhBUUVFS3pBcE1DY0dDQ3NHQVFVRkJ6QUJoaHRvCmRIUndPaTh2Ykc5allXeG9iM04wT2pnd09EQXZiMk56Y0M4d05nWURWUjBmQkM4d0xUQXJvQ21nSjRZbGFIUjAKY0hNNkx5OXNiMk5oYkdodmMzUTZPRFEwTXk5allTOXlaWE4wTDJOaEwyTnliREFmQmdOVkhTTUVHREFXZ0JUTAo4eEJ6dTdtdGVzY0JJWmxBbDZHdEdEQXlwREFkQmdOVkhRNEVGZ1FVRXhLTGpPOFVEZThsNnNPeElUV0Q3dXZnClpKb3dEZ1lEVlIwUEFRSC9CQVFEQWdTd01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0QKQWpBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlCUXJyRWZXa015aTFkT1c5WXZoL0luZUhzNGtGbGFKeXR0ekcvQwp3T2U1UEFJZ0FVWUxxQ3VqZWJUa3RqdmtvWGhMclZnckkySlpLVUEwZW1SUU9sYnlOMG89Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
       },
       "private_key": {
        "inline_bytes": "W3JlZGFjdGVkXQ=="
       },
       "watched_directory": {
        "path": "/certs/sds"
       }
      }
     }
    },
    {
     "name": "int_validation_context",
     "last_updated": "2022-08-29T08:25:25.468Z",
     "secret": {
      "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.Secret",
      "name": "int_validation_context",
      "validation_context": {
       "trusted_ca": {
        "inline_bytes": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpRENDQVMrZ0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQXNNUXN3Q1FZRFZRUUdFd0pHU1RFT01Bd0cKQTFVRUNoTUZibTlyYVdFeERUQUxCZ05WQkFNVEJIcDBjekV3SGhjTk1qSXdOVEU1TURnd01USXlXaGNOTXpJdwpOVEU1TURnd01USXlXakFzTVFzd0NRWURWUVFHRXdKR1NURU9NQXdHQTFVRUNoTUZibTlyYVdFeERUQUxCZ05WCkJBTVRCSHAwY3pFd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTMEwvTTRpeGhOTDNjZDE5RUMKRmJybTNJK3E3SEpGZmtyVTBQYm5qVlAzTjkwWkZqcHp1SU9mbUU4ZE91Y1hPN0NBRUI4WXNiRFdxbm55a01sdgpwM2VObzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCVEw4eEJ6dTdtdGVzY0JJWmxBCmw2R3RHREF5cERBT0JnTlZIUThCQWY4RUJBTUNBUVl3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnTzBRNnNKNFYKcG5IWGpRVmdYdUptdVBMcUNLbTlHS3NkY2E2WlNNVVhQdkFDSUQrWXFpM0tsWnZkbzVtWE8vWFpZN3FpeWVtKwpUQm9lNHNTR2l6TFBTOEtPCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
       },
       "watched_directory": {
        "path": "/certs/sds"
       }
      }
     }
    }
   ]
  }
 ]
}
