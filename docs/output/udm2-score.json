[
    {
        "object_name": "PodDisruptionBudget/policy/v1//udm2-ausfauth",
        "type_meta": {
            "kind": "PodDisruptionBudget",
            "apiVersion": "policy/v1"
        },
        "object_meta": {
            "name": "udm2-ausfauth",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/component": "AUSF-AUTH",
                "app.kubernetes.io/managed-by": "helm",
                "app.kubernetes.io/version": "ueauthn-225.280.0"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "PodDisruptionBudget has policy",
                    "id": "poddisruptionbudget-has-policy",
                    "target_type": "PodDisruptionBudget",
                    "comment": "Makes sure that PodDisruptionBudgets specify minAvailable or maxUnavailable",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/ueauthn/templates/poddisruptionbudget.yaml",
        "file_row": 1
    },
    {
        "object_name": "Service/v1//nausf-auth",
        "type_meta": {
            "kind": "Service",
            "apiVersion": "v1"
        },
        "object_meta": {
            "name": "nausf-auth",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/name": "udm2-ausfauth"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Targets Pod",
                    "id": "service-targets-pod",
                    "target_type": "Service",
                    "comment": "Makes sure that all Services targets a Pod",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The services selector does not match any pods",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Service Type",
                    "id": "service-type",
                    "target_type": "Service",
                    "comment": "Makes sure that the Service type is not NodePort",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/ueauthn/templates/service.yaml",
        "file_row": 1
    },
    {
        "object_name": "Deployment/apps/v1/udm2/udm2-udmarpf",
        "type_meta": {
            "kind": "Deployment",
            "apiVersion": "apps/v1"
        },
        "object_meta": {
            "name": "udm2-udmarpf",
            "namespace": "udm2",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/component": "UDM-ARPF",
                "app.kubernetes.io/managed-by": "helm",
                "app.kubernetes.io/name": "udm2-udmarpf",
                "app.kubernetes.io/version": "arpf-225.280.0"
            },
            "annotations": {
                "description": "Defines deployment of ARPF POD"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Resources",
                    "id": "container-resources",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have resource limits and requests set. The --ignore-container-cpu-limit flag can be used to disable the requirement of having a CPU limit",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Image Tag",
                    "id": "container-image-tag",
                    "target_type": "Pod",
                    "comment": "Makes sure that a explicit non-latest tag is used",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Pod NetworkPolicy",
                    "id": "pod-networkpolicy",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods are targeted by a NetworkPolicy",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod does not have a matching NetworkPolicy",
                        "description": "Create a NetworkPolicy that targets this pod to control who/what can communicate with this pod. Note, this feature needs to be supported by the CNI implementation used in the Kubernetes cluster to have an effect."
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod Probes",
                    "id": "pod-probes",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods have safe probe configurations",
                    "optional": false
                },
                "grade": 7,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "Container is missing a livenessProbe",
                        "description": "A livenessProbe can be used to restart the container if it's deadlocked or has crashed without exiting. It's only recommended to setup a livenessProbe if you really need one."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context User Group ID",
                    "id": "container-security-context-user-group-id",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with valid UID and GID set ",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "softac",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "softac",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "arpf-mcc",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "arpf-mcc",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "arpf-cip",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "arpf-cip",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "arpf-arpf",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "arpf-arpf",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "arpf-admin",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "arpf-admin",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context Privileged",
                    "id": "container-security-context-privileged",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a unprivileged security context set",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Security Context ReadOnlyRootFilesystem",
                    "id": "container-security-context-readonlyrootfilesystem",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with read only filesystem set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "softac",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "arpf-mcc",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "arpf-cip",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "arpf-arpf",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "arpf-admin",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Image Pull Policy",
                    "id": "container-image-pull-policy",
                    "target_type": "Pod",
                    "comment": "Makes sure that the pullPolicy is set to Always. This makes sure that imagePullSecrets are always validated.",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "softac",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "arpf-mcc",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "arpf-cip",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "arpf-arpf",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "arpf-admin",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Ephemeral Storage Request and Limit",
                    "id": "container-ephemeral-storage-request-and-limit",
                    "target_type": "Pod",
                    "comment": "Makes sure all pods have ephemeral-storage requests and limits set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "softac",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "arpf-mcc",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "arpf-cip",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "arpf-arpf",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "arpf-admin",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has PodDisruptionBudget",
                    "id": "deployment-has-poddisruptionbudget",
                    "target_type": "Deployment",
                    "comment": "Makes sure that all Deployments are targeted by a PDB",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "No matching PodDisruptionBudget was found",
                        "description": "It's recommended to define a PodDisruptionBudget to avoid unexpected downtime during Kubernetes maintenance operations, such as when draining a node."
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has host PodAntiAffinity",
                    "id": "deployment-has-host-podantiaffinity",
                    "target_type": "Deployment",
                    "comment": "Makes sure that a podAntiAffinity has been set that prevents multiple pods from being scheduled on the same node. https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Deployment targeted by HPA does not have replicas configured",
                    "id": "deployment-targeted-by-hpa-does-not-have-replicas-configured",
                    "target_type": "Deployment",
                    "comment": "Makes sure that Deployments using a HorizontalPodAutoscaler doesn't have a statically configured replica count set",
                    "optional": false
                },
                "grade": 10,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment is not targeted by a HorizontalPodAutoscaler",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment Pod Selector labels match template metadata labels",
                    "id": "deployment-pod-selector-labels-match-template-metadata-labels",
                    "target_type": "Deployment",
                    "comment": "Ensure the StatefulSet selector labels match the template metadata labels.",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/arpf/templates/deploymentArpf.yaml",
        "file_row": 1
    },
    {
        "object_name": "Deployment/apps/v1/udm2/udm2-udmtrigger",
        "type_meta": {
            "kind": "Deployment",
            "apiVersion": "apps/v1"
        },
        "object_meta": {
            "name": "udm2-udmtrigger",
            "namespace": "udm2",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/component": "UDM-TRIGGER",
                "app.kubernetes.io/managed-by": "helm",
                "app.kubernetes.io/name": "udm2-udmtrigger",
                "app.kubernetes.io/version": "trigger-225.280.0"
            },
            "annotations": {
                "description": "Defines deployment of TRIGGER SERVICE POD"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Security Context Privileged",
                    "id": "container-security-context-privileged",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a unprivileged security context set",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Security Context ReadOnlyRootFilesystem",
                    "id": "container-security-context-readonlyrootfilesystem",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with read only filesystem set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "trigger-mcc",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "trigger",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "trigger-admin",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Image Pull Policy",
                    "id": "container-image-pull-policy",
                    "target_type": "Pod",
                    "comment": "Makes sure that the pullPolicy is set to Always. This makes sure that imagePullSecrets are always validated.",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "trigger-mcc",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "trigger",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "trigger-admin",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Ephemeral Storage Request and Limit",
                    "id": "container-ephemeral-storage-request-and-limit",
                    "target_type": "Pod",
                    "comment": "Makes sure all pods have ephemeral-storage requests and limits set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "trigger-mcc",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "trigger",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "trigger-admin",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod NetworkPolicy",
                    "id": "pod-networkpolicy",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods are targeted by a NetworkPolicy",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod does not have a matching NetworkPolicy",
                        "description": "Create a NetworkPolicy that targets this pod to control who/what can communicate with this pod. Note, this feature needs to be supported by the CNI implementation used in the Kubernetes cluster to have an effect."
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod Probes",
                    "id": "pod-probes",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods have safe probe configurations",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod is not targeted by a service, skipping probe checks.",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context User Group ID",
                    "id": "container-security-context-user-group-id",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with valid UID and GID set ",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "trigger-mcc",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "trigger-mcc",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "trigger",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "trigger",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "trigger-admin",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "trigger-admin",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Resources",
                    "id": "container-resources",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have resource limits and requests set. The --ignore-container-cpu-limit flag can be used to disable the requirement of having a CPU limit",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Image Tag",
                    "id": "container-image-tag",
                    "target_type": "Pod",
                    "comment": "Makes sure that a explicit non-latest tag is used",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Deployment has PodDisruptionBudget",
                    "id": "deployment-has-poddisruptionbudget",
                    "target_type": "Deployment",
                    "comment": "Makes sure that all Deployments are targeted by a PDB",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "No matching PodDisruptionBudget was found",
                        "description": "It's recommended to define a PodDisruptionBudget to avoid unexpected downtime during Kubernetes maintenance operations, such as when draining a node."
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has host PodAntiAffinity",
                    "id": "deployment-has-host-podantiaffinity",
                    "target_type": "Deployment",
                    "comment": "Makes sure that a podAntiAffinity has been set that prevents multiple pods from being scheduled on the same node. https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Deployment targeted by HPA does not have replicas configured",
                    "id": "deployment-targeted-by-hpa-does-not-have-replicas-configured",
                    "target_type": "Deployment",
                    "comment": "Makes sure that Deployments using a HorizontalPodAutoscaler doesn't have a statically configured replica count set",
                    "optional": false
                },
                "grade": 10,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment is not targeted by a HorizontalPodAutoscaler",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment Pod Selector labels match template metadata labels",
                    "id": "deployment-pod-selector-labels-match-template-metadata-labels",
                    "target_type": "Deployment",
                    "comment": "Ensure the StatefulSet selector labels match the template metadata labels.",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/trigger/templates/deploymentTrigger.yaml",
        "file_row": 1
    },
    {
        "object_name": "PodDisruptionBudget/policy/v1//udm2-udmarpf",
        "type_meta": {
            "kind": "PodDisruptionBudget",
            "apiVersion": "policy/v1"
        },
        "object_meta": {
            "name": "udm2-udmarpf",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/component": "UDM-ARPF",
                "app.kubernetes.io/managed-by": "helm",
                "app.kubernetes.io/version": "arpf-225.280.0"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "PodDisruptionBudget has policy",
                    "id": "poddisruptionbudget-has-policy",
                    "target_type": "PodDisruptionBudget",
                    "comment": "Makes sure that PodDisruptionBudgets specify minAvailable or maxUnavailable",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/arpf/templates/poddisruptionbudget.yaml",
        "file_row": 1
    },
    {
        "object_name": "PodDisruptionBudget/policy/v1//udm2-clustermonitoragent",
        "type_meta": {
            "kind": "PodDisruptionBudget",
            "apiVersion": "policy/v1"
        },
        "object_meta": {
            "name": "udm2-clustermonitoragent",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/component": "CLUSTERMONITORAGENT",
                "app.kubernetes.io/managed-by": "helm",
                "app.kubernetes.io/version": "clustermonitoragent-225.280.0"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "PodDisruptionBudget has policy",
                    "id": "poddisruptionbudget-has-policy",
                    "target_type": "PodDisruptionBudget",
                    "comment": "Makes sure that PodDisruptionBudgets specify minAvailable or maxUnavailable",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/clustermonitoragent/templates/poddisruptionbudget.yaml",
        "file_row": 1
    },
    {
        "object_name": "PodDisruptionBudget/policy/v1//udm2-udmtrigger",
        "type_meta": {
            "kind": "PodDisruptionBudget",
            "apiVersion": "policy/v1"
        },
        "object_meta": {
            "name": "udm2-udmtrigger",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/component": "UDM-TRIGGER",
                "app.kubernetes.io/managed-by": "helm",
                "app.kubernetes.io/version": "trigger-225.280.0"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "PodDisruptionBudget has policy",
                    "id": "poddisruptionbudget-has-policy",
                    "target_type": "PodDisruptionBudget",
                    "comment": "Makes sure that PodDisruptionBudgets specify minAvailable or maxUnavailable",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/trigger/templates/poddisruptionbudget.yaml",
        "file_row": 1
    },
    {
        "object_name": "PodDisruptionBudget/policy/v1//udm2-udmuecm",
        "type_meta": {
            "kind": "PodDisruptionBudget",
            "apiVersion": "policy/v1"
        },
        "object_meta": {
            "name": "udm2-udmuecm",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/component": "UDM-UECM",
                "app.kubernetes.io/managed-by": "helm",
                "app.kubernetes.io/version": "uecm-225.280.0"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "PodDisruptionBudget has policy",
                    "id": "poddisruptionbudget-has-policy",
                    "target_type": "PodDisruptionBudget",
                    "comment": "Makes sure that PodDisruptionBudgets specify minAvailable or maxUnavailable",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/uecm/templates/poddisruptionbudget.yaml",
        "file_row": 1
    },
    {
        "object_name": "Deployment/apps/v1/udm2/udm2-udmsdm",
        "type_meta": {
            "kind": "Deployment",
            "apiVersion": "apps/v1"
        },
        "object_meta": {
            "name": "udm2-udmsdm",
            "namespace": "udm2",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/component": "UDM-SDM",
                "app.kubernetes.io/managed-by": "helm",
                "app.kubernetes.io/name": "udm2-udmsdm",
                "app.kubernetes.io/version": "sdm-225.280.0"
            },
            "annotations": {
                "description": "Defines deployment of SDM POD"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Resources",
                    "id": "container-resources",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have resource limits and requests set. The --ignore-container-cpu-limit flag can be used to disable the requirement of having a CPU limit",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Image Tag",
                    "id": "container-image-tag",
                    "target_type": "Pod",
                    "comment": "Makes sure that a explicit non-latest tag is used",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Security Context ReadOnlyRootFilesystem",
                    "id": "container-security-context-readonlyrootfilesystem",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with read only filesystem set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "sdm-mcc",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "sdm-admin",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Image Pull Policy",
                    "id": "container-image-pull-policy",
                    "target_type": "Pod",
                    "comment": "Makes sure that the pullPolicy is set to Always. This makes sure that imagePullSecrets are always validated.",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "sdm-mcc",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "sdm-cip",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "sdm-sdm",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "sdm-h2p",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "sdm-admin",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Ephemeral Storage Request and Limit",
                    "id": "container-ephemeral-storage-request-and-limit",
                    "target_type": "Pod",
                    "comment": "Makes sure all pods have ephemeral-storage requests and limits set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "sdm-mcc",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "sdm-cip",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "sdm-sdm",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "sdm-h2p",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "sdm-admin",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod NetworkPolicy",
                    "id": "pod-networkpolicy",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods are targeted by a NetworkPolicy",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod does not have a matching NetworkPolicy",
                        "description": "Create a NetworkPolicy that targets this pod to control who/what can communicate with this pod. Note, this feature needs to be supported by the CNI implementation used in the Kubernetes cluster to have an effect."
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod Probes",
                    "id": "pod-probes",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods have safe probe configurations",
                    "optional": false
                },
                "grade": 7,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "Container is missing a livenessProbe",
                        "description": "A livenessProbe can be used to restart the container if it's deadlocked or has crashed without exiting. It's only recommended to setup a livenessProbe if you really need one."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context User Group ID",
                    "id": "container-security-context-user-group-id",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with valid UID and GID set ",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "sdm-mcc",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "sdm-mcc",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "sdm-cip",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "sdm-cip",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "sdm-sdm",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "sdm-sdm",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "sdm-h2p",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "sdm-h2p",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "sdm-admin",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "sdm-admin",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context Privileged",
                    "id": "container-security-context-privileged",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a unprivileged security context set",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Deployment has PodDisruptionBudget",
                    "id": "deployment-has-poddisruptionbudget",
                    "target_type": "Deployment",
                    "comment": "Makes sure that all Deployments are targeted by a PDB",
                    "optional": false
                },
                "grade": 0,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment has less than 2 replicas",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has host PodAntiAffinity",
                    "id": "deployment-has-host-podantiaffinity",
                    "target_type": "Deployment",
                    "comment": "Makes sure that a podAntiAffinity has been set that prevents multiple pods from being scheduled on the same node. https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                    "optional": false
                },
                "grade": 0,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment has less than 2 replicas",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment targeted by HPA does not have replicas configured",
                    "id": "deployment-targeted-by-hpa-does-not-have-replicas-configured",
                    "target_type": "Deployment",
                    "comment": "Makes sure that Deployments using a HorizontalPodAutoscaler doesn't have a statically configured replica count set",
                    "optional": false
                },
                "grade": 10,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment is not targeted by a HorizontalPodAutoscaler",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment Pod Selector labels match template metadata labels",
                    "id": "deployment-pod-selector-labels-match-template-metadata-labels",
                    "target_type": "Deployment",
                    "comment": "Ensure the StatefulSet selector labels match the template metadata labels.",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/sdm/templates/deploymentSdm.yaml",
        "file_row": 1
    },
    {
        "object_name": "Deployment/apps/v1/udm2/udm2-udmsim",
        "type_meta": {
            "kind": "Deployment",
            "apiVersion": "apps/v1"
        },
        "object_meta": {
            "name": "udm2-udmsim",
            "namespace": "udm2",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/component": "SIM",
                "app.kubernetes.io/managed-by": "helm",
                "app.kubernetes.io/name": "udm2-udmsim",
                "app.kubernetes.io/version": "sim-225.280.0"
            },
            "annotations": {
                "description": "Defines deployment of SIM POD"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Resources",
                    "id": "container-resources",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have resource limits and requests set. The --ignore-container-cpu-limit flag can be used to disable the requirement of having a CPU limit",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Image Tag",
                    "id": "container-image-tag",
                    "target_type": "Pod",
                    "comment": "Makes sure that a explicit non-latest tag is used",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Pod NetworkPolicy",
                    "id": "pod-networkpolicy",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods are targeted by a NetworkPolicy",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod does not have a matching NetworkPolicy",
                        "description": "Create a NetworkPolicy that targets this pod to control who/what can communicate with this pod. Note, this feature needs to be supported by the CNI implementation used in the Kubernetes cluster to have an effect."
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod Probes",
                    "id": "pod-probes",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods have safe probe configurations",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod is not targeted by a service, skipping probe checks.",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context User Group ID",
                    "id": "container-security-context-user-group-id",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with valid UID and GID set ",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "sim-mcc",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "sim-mcc",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "sim-cip",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "sim-cip",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "sim-transporter",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "sim-transporter",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "sim-xix",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "sim-xix",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "sim-admin",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "sim-admin",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context Privileged",
                    "id": "container-security-context-privileged",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a unprivileged security context set",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Security Context ReadOnlyRootFilesystem",
                    "id": "container-security-context-readonlyrootfilesystem",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with read only filesystem set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "sim-mcc",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "sim-transporter",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "sim-xix",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "sim-admin",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Image Pull Policy",
                    "id": "container-image-pull-policy",
                    "target_type": "Pod",
                    "comment": "Makes sure that the pullPolicy is set to Always. This makes sure that imagePullSecrets are always validated.",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "sim-mcc",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "sim-cip",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "sim-transporter",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "sim-xix",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "sim-admin",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Ephemeral Storage Request and Limit",
                    "id": "container-ephemeral-storage-request-and-limit",
                    "target_type": "Pod",
                    "comment": "Makes sure all pods have ephemeral-storage requests and limits set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "sim-mcc",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "sim-cip",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "sim-transporter",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "sim-xix",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "sim-admin",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has PodDisruptionBudget",
                    "id": "deployment-has-poddisruptionbudget",
                    "target_type": "Deployment",
                    "comment": "Makes sure that all Deployments are targeted by a PDB",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "No matching PodDisruptionBudget was found",
                        "description": "It's recommended to define a PodDisruptionBudget to avoid unexpected downtime during Kubernetes maintenance operations, such as when draining a node."
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has host PodAntiAffinity",
                    "id": "deployment-has-host-podantiaffinity",
                    "target_type": "Deployment",
                    "comment": "Makes sure that a podAntiAffinity has been set that prevents multiple pods from being scheduled on the same node. https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Deployment targeted by HPA does not have replicas configured",
                    "id": "deployment-targeted-by-hpa-does-not-have-replicas-configured",
                    "target_type": "Deployment",
                    "comment": "Makes sure that Deployments using a HorizontalPodAutoscaler doesn't have a statically configured replica count set",
                    "optional": false
                },
                "grade": 10,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment is not targeted by a HorizontalPodAutoscaler",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment Pod Selector labels match template metadata labels",
                    "id": "deployment-pod-selector-labels-match-template-metadata-labels",
                    "target_type": "Deployment",
                    "comment": "Ensure the StatefulSet selector labels match the template metadata labels.",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/sim/templates/deploymentSim.yaml",
        "file_row": 1
    },
    {
        "object_name": "Deployment/apps/v1/udm2/udm2-udmueau",
        "type_meta": {
            "kind": "Deployment",
            "apiVersion": "apps/v1"
        },
        "object_meta": {
            "name": "udm2-udmueau",
            "namespace": "udm2",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/component": "UDM-UEAU",
                "app.kubernetes.io/managed-by": "helm",
                "app.kubernetes.io/name": "udm2-udmueau",
                "app.kubernetes.io/version": "udmueauth-225.280.0"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Resources",
                    "id": "container-resources",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have resource limits and requests set. The --ignore-container-cpu-limit flag can be used to disable the requirement of having a CPU limit",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Image Tag",
                    "id": "container-image-tag",
                    "target_type": "Pod",
                    "comment": "Makes sure that a explicit non-latest tag is used",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Security Context Privileged",
                    "id": "container-security-context-privileged",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a unprivileged security context set",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Security Context ReadOnlyRootFilesystem",
                    "id": "container-security-context-readonlyrootfilesystem",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with read only filesystem set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "ueauthn-mcc",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "ueauthn-admin",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Image Pull Policy",
                    "id": "container-image-pull-policy",
                    "target_type": "Pod",
                    "comment": "Makes sure that the pullPolicy is set to Always. This makes sure that imagePullSecrets are always validated.",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "ueauthn-mcc",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "ueauth-cip",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "ueauth-ueauth",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "ueauthn-h2p",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "ueauthn-admin",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Ephemeral Storage Request and Limit",
                    "id": "container-ephemeral-storage-request-and-limit",
                    "target_type": "Pod",
                    "comment": "Makes sure all pods have ephemeral-storage requests and limits set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "ueauthn-mcc",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "ueauth-cip",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "ueauth-ueauth",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "ueauthn-h2p",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "ueauthn-admin",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod NetworkPolicy",
                    "id": "pod-networkpolicy",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods are targeted by a NetworkPolicy",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod does not have a matching NetworkPolicy",
                        "description": "Create a NetworkPolicy that targets this pod to control who/what can communicate with this pod. Note, this feature needs to be supported by the CNI implementation used in the Kubernetes cluster to have an effect."
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod Probes",
                    "id": "pod-probes",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods have safe probe configurations",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod is not targeted by a service, skipping probe checks.",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context User Group ID",
                    "id": "container-security-context-user-group-id",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with valid UID and GID set ",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "ueauthn-mcc",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "ueauthn-mcc",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "ueauth-cip",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "ueauth-cip",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "ueauth-ueauth",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "ueauth-ueauth",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "ueauthn-h2p",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "ueauthn-h2p",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "ueauthn-admin",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "ueauthn-admin",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment targeted by HPA does not have replicas configured",
                    "id": "deployment-targeted-by-hpa-does-not-have-replicas-configured",
                    "target_type": "Deployment",
                    "comment": "Makes sure that Deployments using a HorizontalPodAutoscaler doesn't have a statically configured replica count set",
                    "optional": false
                },
                "grade": 10,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment is not targeted by a HorizontalPodAutoscaler",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment Pod Selector labels match template metadata labels",
                    "id": "deployment-pod-selector-labels-match-template-metadata-labels",
                    "target_type": "Deployment",
                    "comment": "Ensure the StatefulSet selector labels match the template metadata labels.",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Deployment has PodDisruptionBudget",
                    "id": "deployment-has-poddisruptionbudget",
                    "target_type": "Deployment",
                    "comment": "Makes sure that all Deployments are targeted by a PDB",
                    "optional": false
                },
                "grade": 0,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment has less than 2 replicas",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has host PodAntiAffinity",
                    "id": "deployment-has-host-podantiaffinity",
                    "target_type": "Deployment",
                    "comment": "Makes sure that a podAntiAffinity has been set that prevents multiple pods from being scheduled on the same node. https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                    "optional": false
                },
                "grade": 0,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment has less than 2 replicas",
                        "description": ""
                    }
                ]
            }
        ],
        "file_name": "reg-helm-charts/charts/udmueauth/templates/deploymentUeauthn.yaml",
        "file_row": 1
    },
    {
        "object_name": "PodDisruptionBudget/policy/v1//udm2-http2lb",
        "type_meta": {
            "kind": "PodDisruptionBudget",
            "apiVersion": "policy/v1"
        },
        "object_meta": {
            "name": "udm2-http2lb",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/component": "HTTP2LB",
                "app.kubernetes.io/managed-by": "helm",
                "app.kubernetes.io/version": "http2lb-225.280.0"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "PodDisruptionBudget has policy",
                    "id": "poddisruptionbudget-has-policy",
                    "target_type": "PodDisruptionBudget",
                    "comment": "Makes sure that PodDisruptionBudgets specify minAvailable or maxUnavailable",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/http2lb/templates/poddisruptionbudget.yaml",
        "file_row": 1
    },
    {
        "object_name": "PodDisruptionBudget/policy/v1//udm2-udmnim",
        "type_meta": {
            "kind": "PodDisruptionBudget",
            "apiVersion": "policy/v1"
        },
        "object_meta": {
            "name": "udm2-udmnim",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/component": "NIM",
                "app.kubernetes.io/managed-by": "helm",
                "app.kubernetes.io/version": "nim-225.280.0"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "PodDisruptionBudget has policy",
                    "id": "poddisruptionbudget-has-policy",
                    "target_type": "PodDisruptionBudget",
                    "comment": "Makes sure that PodDisruptionBudgets specify minAvailable or maxUnavailable",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/nim/templates/poddisruptionbudget.yaml",
        "file_row": 1
    },
    {
        "object_name": "PodDisruptionBudget/policy/v1//udm2-udmueau",
        "type_meta": {
            "kind": "PodDisruptionBudget",
            "apiVersion": "policy/v1"
        },
        "object_meta": {
            "name": "udm2-udmueau",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/component": "UDM-UEAU",
                "app.kubernetes.io/managed-by": "helm",
                "app.kubernetes.io/version": "udmueauth-225.280.0"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "PodDisruptionBudget has policy",
                    "id": "poddisruptionbudget-has-policy",
                    "target_type": "PodDisruptionBudget",
                    "comment": "Makes sure that PodDisruptionBudgets specify minAvailable or maxUnavailable",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/udmueauth/templates/poddisruptionbudget.yaml",
        "file_row": 1
    },
    {
        "object_name": "Service/v1//nim",
        "type_meta": {
            "kind": "Service",
            "apiVersion": "v1"
        },
        "object_meta": {
            "name": "nim",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/name": "udm2-udmnim"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Targets Pod",
                    "id": "service-targets-pod",
                    "target_type": "Service",
                    "comment": "Makes sure that all Services targets a Pod",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The services selector does not match any pods",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Service Type",
                    "id": "service-type",
                    "target_type": "Service",
                    "comment": "Makes sure that the Service type is not NodePort",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/nim/templates/service.yaml",
        "file_row": 1
    },
    {
        "object_name": "Deployment/apps/v1//udm2-clustermonitoragent",
        "type_meta": {
            "kind": "Deployment",
            "apiVersion": "apps/v1"
        },
        "object_meta": {
            "name": "udm2-clustermonitoragent",
            "creationTimestamp": null,
            "labels": {
                "app": "clustermonitoragent",
                "chart": "clustermonitoragent-225.280.0",
                "heritage": "Helm",
                "release": "udm2"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Image Pull Policy",
                    "id": "container-image-pull-policy",
                    "target_type": "Pod",
                    "comment": "Makes sure that the pullPolicy is set to Always. This makes sure that imagePullSecrets are always validated.",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "ztsclustermonitoragent",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Ephemeral Storage Request and Limit",
                    "id": "container-ephemeral-storage-request-and-limit",
                    "target_type": "Pod",
                    "comment": "Makes sure all pods have ephemeral-storage requests and limits set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "ztsclustermonitoragent",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod NetworkPolicy",
                    "id": "pod-networkpolicy",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods are targeted by a NetworkPolicy",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod does not have a matching NetworkPolicy",
                        "description": "Create a NetworkPolicy that targets this pod to control who/what can communicate with this pod. Note, this feature needs to be supported by the CNI implementation used in the Kubernetes cluster to have an effect."
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod Probes",
                    "id": "pod-probes",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods have safe probe configurations",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod is not targeted by a service, skipping probe checks.",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context User Group ID",
                    "id": "container-security-context-user-group-id",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with valid UID and GID set ",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "ztsclustermonitoragent",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "ztsclustermonitoragent",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context Privileged",
                    "id": "container-security-context-privileged",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a unprivileged security context set",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Security Context ReadOnlyRootFilesystem",
                    "id": "container-security-context-readonlyrootfilesystem",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with read only filesystem set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "ztsclustermonitoragent",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Resources",
                    "id": "container-resources",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have resource limits and requests set. The --ignore-container-cpu-limit flag can be used to disable the requirement of having a CPU limit",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Image Tag",
                    "id": "container-image-tag",
                    "target_type": "Pod",
                    "comment": "Makes sure that a explicit non-latest tag is used",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Deployment has host PodAntiAffinity",
                    "id": "deployment-has-host-podantiaffinity",
                    "target_type": "Deployment",
                    "comment": "Makes sure that a podAntiAffinity has been set that prevents multiple pods from being scheduled on the same node. https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                    "optional": false
                },
                "grade": 0,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment has less than 2 replicas",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment targeted by HPA does not have replicas configured",
                    "id": "deployment-targeted-by-hpa-does-not-have-replicas-configured",
                    "target_type": "Deployment",
                    "comment": "Makes sure that Deployments using a HorizontalPodAutoscaler doesn't have a statically configured replica count set",
                    "optional": false
                },
                "grade": 10,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment is not targeted by a HorizontalPodAutoscaler",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment Pod Selector labels match template metadata labels",
                    "id": "deployment-pod-selector-labels-match-template-metadata-labels",
                    "target_type": "Deployment",
                    "comment": "Ensure the StatefulSet selector labels match the template metadata labels.",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Deployment has PodDisruptionBudget",
                    "id": "deployment-has-poddisruptionbudget",
                    "target_type": "Deployment",
                    "comment": "Makes sure that all Deployments are targeted by a PDB",
                    "optional": false
                },
                "grade": 0,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment has less than 2 replicas",
                        "description": ""
                    }
                ]
            }
        ],
        "file_name": "reg-helm-charts/charts/clustermonitoragent/templates/clustermonitoragent-deployment.yaml",
        "file_row": 1
    },
    {
        "object_name": "Deployment/apps/v1/udm2/udm2-udmee",
        "type_meta": {
            "kind": "Deployment",
            "apiVersion": "apps/v1"
        },
        "object_meta": {
            "name": "udm2-udmee",
            "namespace": "udm2",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/component": "UDM-EE",
                "app.kubernetes.io/managed-by": "helm",
                "app.kubernetes.io/name": "udm2-udmee",
                "app.kubernetes.io/version": "ee-225.280.0"
            },
            "annotations": {
                "description": "Defines deployment of EE POD"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Resources",
                    "id": "container-resources",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have resource limits and requests set. The --ignore-container-cpu-limit flag can be used to disable the requirement of having a CPU limit",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Image Tag",
                    "id": "container-image-tag",
                    "target_type": "Pod",
                    "comment": "Makes sure that a explicit non-latest tag is used",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Image Pull Policy",
                    "id": "container-image-pull-policy",
                    "target_type": "Pod",
                    "comment": "Makes sure that the pullPolicy is set to Always. This makes sure that imagePullSecrets are always validated.",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "ee-mcc",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "ee-cip",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "ee-ee",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "ee-h2p",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "ee-admin",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Ephemeral Storage Request and Limit",
                    "id": "container-ephemeral-storage-request-and-limit",
                    "target_type": "Pod",
                    "comment": "Makes sure all pods have ephemeral-storage requests and limits set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "ee-mcc",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "ee-cip",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "ee-ee",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "ee-h2p",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "ee-admin",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod NetworkPolicy",
                    "id": "pod-networkpolicy",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods are targeted by a NetworkPolicy",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod does not have a matching NetworkPolicy",
                        "description": "Create a NetworkPolicy that targets this pod to control who/what can communicate with this pod. Note, this feature needs to be supported by the CNI implementation used in the Kubernetes cluster to have an effect."
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod Probes",
                    "id": "pod-probes",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods have safe probe configurations",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod is not targeted by a service, skipping probe checks.",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context User Group ID",
                    "id": "container-security-context-user-group-id",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with valid UID and GID set ",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "ee-mcc",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "ee-mcc",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "ee-cip",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "ee-cip",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "ee-ee",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "ee-ee",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "ee-h2p",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "ee-h2p",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "ee-admin",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "ee-admin",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context Privileged",
                    "id": "container-security-context-privileged",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a unprivileged security context set",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Security Context ReadOnlyRootFilesystem",
                    "id": "container-security-context-readonlyrootfilesystem",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with read only filesystem set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "ee-mcc",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "ee-admin",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has PodDisruptionBudget",
                    "id": "deployment-has-poddisruptionbudget",
                    "target_type": "Deployment",
                    "comment": "Makes sure that all Deployments are targeted by a PDB",
                    "optional": false
                },
                "grade": 0,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment has less than 2 replicas",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has host PodAntiAffinity",
                    "id": "deployment-has-host-podantiaffinity",
                    "target_type": "Deployment",
                    "comment": "Makes sure that a podAntiAffinity has been set that prevents multiple pods from being scheduled on the same node. https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                    "optional": false
                },
                "grade": 0,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment has less than 2 replicas",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment targeted by HPA does not have replicas configured",
                    "id": "deployment-targeted-by-hpa-does-not-have-replicas-configured",
                    "target_type": "Deployment",
                    "comment": "Makes sure that Deployments using a HorizontalPodAutoscaler doesn't have a statically configured replica count set",
                    "optional": false
                },
                "grade": 10,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment is not targeted by a HorizontalPodAutoscaler",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment Pod Selector labels match template metadata labels",
                    "id": "deployment-pod-selector-labels-match-template-metadata-labels",
                    "target_type": "Deployment",
                    "comment": "Ensure the StatefulSet selector labels match the template metadata labels.",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/ee/templates/deploymentEe.yaml",
        "file_row": 1
    },
    {
        "object_name": "Deployment/apps/v1/udm2/udm2-udmmt",
        "type_meta": {
            "kind": "Deployment",
            "apiVersion": "apps/v1"
        },
        "object_meta": {
            "name": "udm2-udmmt",
            "namespace": "udm2",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/component": "UDM-MT",
                "app.kubernetes.io/managed-by": "helm",
                "app.kubernetes.io/name": "udm2-udmmt",
                "app.kubernetes.io/version": "mt-225.280.0"
            },
            "annotations": {
                "description": "Defines deployment of MT POD"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Resources",
                    "id": "container-resources",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have resource limits and requests set. The --ignore-container-cpu-limit flag can be used to disable the requirement of having a CPU limit",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Image Tag",
                    "id": "container-image-tag",
                    "target_type": "Pod",
                    "comment": "Makes sure that a explicit non-latest tag is used",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Image Pull Policy",
                    "id": "container-image-pull-policy",
                    "target_type": "Pod",
                    "comment": "Makes sure that the pullPolicy is set to Always. This makes sure that imagePullSecrets are always validated.",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "mt-mcc",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "mt-cip",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "mt-mt",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "mt-admin",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Ephemeral Storage Request and Limit",
                    "id": "container-ephemeral-storage-request-and-limit",
                    "target_type": "Pod",
                    "comment": "Makes sure all pods have ephemeral-storage requests and limits set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "mt-mcc",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "mt-cip",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "mt-mt",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "mt-admin",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod NetworkPolicy",
                    "id": "pod-networkpolicy",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods are targeted by a NetworkPolicy",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod does not have a matching NetworkPolicy",
                        "description": "Create a NetworkPolicy that targets this pod to control who/what can communicate with this pod. Note, this feature needs to be supported by the CNI implementation used in the Kubernetes cluster to have an effect."
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod Probes",
                    "id": "pod-probes",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods have safe probe configurations",
                    "optional": false
                },
                "grade": 7,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "Container is missing a livenessProbe",
                        "description": "A livenessProbe can be used to restart the container if it's deadlocked or has crashed without exiting. It's only recommended to setup a livenessProbe if you really need one."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context User Group ID",
                    "id": "container-security-context-user-group-id",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with valid UID and GID set ",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "mt-mcc",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "mt-mcc",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "mt-cip",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "mt-cip",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "mt-mt",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "mt-mt",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "mt-admin",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "mt-admin",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context Privileged",
                    "id": "container-security-context-privileged",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a unprivileged security context set",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Security Context ReadOnlyRootFilesystem",
                    "id": "container-security-context-readonlyrootfilesystem",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with read only filesystem set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "mt-mcc",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "mt-cip",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "mt-mt",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "mt-admin",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has PodDisruptionBudget",
                    "id": "deployment-has-poddisruptionbudget",
                    "target_type": "Deployment",
                    "comment": "Makes sure that all Deployments are targeted by a PDB",
                    "optional": false
                },
                "grade": 0,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment has less than 2 replicas",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has host PodAntiAffinity",
                    "id": "deployment-has-host-podantiaffinity",
                    "target_type": "Deployment",
                    "comment": "Makes sure that a podAntiAffinity has been set that prevents multiple pods from being scheduled on the same node. https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                    "optional": false
                },
                "grade": 0,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment has less than 2 replicas",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment targeted by HPA does not have replicas configured",
                    "id": "deployment-targeted-by-hpa-does-not-have-replicas-configured",
                    "target_type": "Deployment",
                    "comment": "Makes sure that Deployments using a HorizontalPodAutoscaler doesn't have a statically configured replica count set",
                    "optional": false
                },
                "grade": 10,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment is not targeted by a HorizontalPodAutoscaler",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment Pod Selector labels match template metadata labels",
                    "id": "deployment-pod-selector-labels-match-template-metadata-labels",
                    "target_type": "Deployment",
                    "comment": "Ensure the StatefulSet selector labels match the template metadata labels.",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/mt/templates/deploymentMt.yaml",
        "file_row": 1
    },
    {
        "object_name": "PodDisruptionBudget/policy/v1//udm2-ccasapache",
        "type_meta": {
            "kind": "PodDisruptionBudget",
            "apiVersion": "policy/v1"
        },
        "object_meta": {
            "name": "udm2-ccasapache",
            "creationTimestamp": null,
            "labels": {
                "app": "udm2-ccasapache",
                "release": "udm2"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "PodDisruptionBudget has policy",
                    "id": "poddisruptionbudget-has-policy",
                    "target_type": "PodDisruptionBudget",
                    "comment": "Makes sure that PodDisruptionBudgets specify minAvailable or maxUnavailable",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/ccasapache/templates/poddisruptionbudget.yaml",
        "file_row": 1
    },
    {
        "object_name": "PodDisruptionBudget/policy/v1//udm2-udmsdm",
        "type_meta": {
            "kind": "PodDisruptionBudget",
            "apiVersion": "policy/v1"
        },
        "object_meta": {
            "name": "udm2-udmsdm",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/component": "UDM-SDM",
                "app.kubernetes.io/managed-by": "helm",
                "app.kubernetes.io/version": "sdm-225.280.0"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "PodDisruptionBudget has policy",
                    "id": "poddisruptionbudget-has-policy",
                    "target_type": "PodDisruptionBudget",
                    "comment": "Makes sure that PodDisruptionBudgets specify minAvailable or maxUnavailable",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/sdm/templates/poddisruptionbudget.yaml",
        "file_row": 1
    },
    {
        "object_name": "Service/v1//http2lb",
        "type_meta": {
            "kind": "Service",
            "apiVersion": "v1"
        },
        "object_meta": {
            "name": "http2lb",
            "creationTimestamp": null,
            "labels": {
                "app": "http2lb",
                "chart": "http2lb-225.280.0",
                "component": "http2lb",
                "heritage": "Helm",
                "release": "udm2"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Type",
                    "id": "service-type",
                    "target_type": "Service",
                    "comment": "Makes sure that the Service type is not NodePort",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Targets Pod",
                    "id": "service-targets-pod",
                    "target_type": "Service",
                    "comment": "Makes sure that all Services targets a Pod",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/http2lb/templates/service.yaml",
        "file_row": 1
    },
    {
        "object_name": "Service/v1/udm2/nudm-uecm",
        "type_meta": {
            "kind": "Service",
            "apiVersion": "v1"
        },
        "object_meta": {
            "name": "nudm-uecm",
            "namespace": "udm2",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/name": "udm2-udmuecm"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Targets Pod",
                    "id": "service-targets-pod",
                    "target_type": "Service",
                    "comment": "Makes sure that all Services targets a Pod",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Type",
                    "id": "service-type",
                    "target_type": "Service",
                    "comment": "Makes sure that the Service type is not NodePort",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/uecm/templates/service.yaml",
        "file_row": 1
    },
    {
        "object_name": "Deployment/apps/v1/udm2/udm2-udmnim",
        "type_meta": {
            "kind": "Deployment",
            "apiVersion": "apps/v1"
        },
        "object_meta": {
            "name": "udm2-udmnim",
            "namespace": "udm2",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/component": "NIM",
                "app.kubernetes.io/managed-by": "helm",
                "app.kubernetes.io/name": "udm2-udmnim",
                "app.kubernetes.io/version": "nim-225.280.0"
            },
            "annotations": {
                "description": "Defines deployment of NIM POD"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Pod Probes",
                    "id": "pod-probes",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods have safe probe configurations",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod is not targeted by a service, skipping probe checks.",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context User Group ID",
                    "id": "container-security-context-user-group-id",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with valid UID and GID set ",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "nim-mcc",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "nim-mcc",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "nim-cip",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "nim-cip",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "nim-nim",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "nim-nim",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "nim-h2p",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "nim-h2p",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "nim-admin",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "nim-admin",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "leader-elector",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "leader-elector",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context Privileged",
                    "id": "container-security-context-privileged",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a unprivileged security context set",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Security Context ReadOnlyRootFilesystem",
                    "id": "container-security-context-readonlyrootfilesystem",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with read only filesystem set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "nim-mcc",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "nim-admin",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "leader-elector",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Image Pull Policy",
                    "id": "container-image-pull-policy",
                    "target_type": "Pod",
                    "comment": "Makes sure that the pullPolicy is set to Always. This makes sure that imagePullSecrets are always validated.",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "nim-mcc",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "nim-cip",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "nim-nim",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "nim-h2p",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "nim-admin",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "leader-elector",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Ephemeral Storage Request and Limit",
                    "id": "container-ephemeral-storage-request-and-limit",
                    "target_type": "Pod",
                    "comment": "Makes sure all pods have ephemeral-storage requests and limits set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "nim-mcc",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "nim-cip",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "nim-nim",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "nim-h2p",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "nim-admin",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "leader-elector",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod NetworkPolicy",
                    "id": "pod-networkpolicy",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods are targeted by a NetworkPolicy",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod does not have a matching NetworkPolicy",
                        "description": "Create a NetworkPolicy that targets this pod to control who/what can communicate with this pod. Note, this feature needs to be supported by the CNI implementation used in the Kubernetes cluster to have an effect."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Resources",
                    "id": "container-resources",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have resource limits and requests set. The --ignore-container-cpu-limit flag can be used to disable the requirement of having a CPU limit",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Image Tag",
                    "id": "container-image-tag",
                    "target_type": "Pod",
                    "comment": "Makes sure that a explicit non-latest tag is used",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Deployment has PodDisruptionBudget",
                    "id": "deployment-has-poddisruptionbudget",
                    "target_type": "Deployment",
                    "comment": "Makes sure that all Deployments are targeted by a PDB",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "No matching PodDisruptionBudget was found",
                        "description": "It's recommended to define a PodDisruptionBudget to avoid unexpected downtime during Kubernetes maintenance operations, such as when draining a node."
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has host PodAntiAffinity",
                    "id": "deployment-has-host-podantiaffinity",
                    "target_type": "Deployment",
                    "comment": "Makes sure that a podAntiAffinity has been set that prevents multiple pods from being scheduled on the same node. https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Deployment targeted by HPA does not have replicas configured",
                    "id": "deployment-targeted-by-hpa-does-not-have-replicas-configured",
                    "target_type": "Deployment",
                    "comment": "Makes sure that Deployments using a HorizontalPodAutoscaler doesn't have a statically configured replica count set",
                    "optional": false
                },
                "grade": 10,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment is not targeted by a HorizontalPodAutoscaler",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment Pod Selector labels match template metadata labels",
                    "id": "deployment-pod-selector-labels-match-template-metadata-labels",
                    "target_type": "Deployment",
                    "comment": "Ensure the StatefulSet selector labels match the template metadata labels.",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/nim/templates/deploymentNim.yaml",
        "file_row": 1
    },
    {
        "object_name": "Deployment/apps/v1/udm2/udm2-ausfauth",
        "type_meta": {
            "kind": "Deployment",
            "apiVersion": "apps/v1"
        },
        "object_meta": {
            "name": "udm2-ausfauth",
            "namespace": "udm2",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/component": "AUSF-AUTH",
                "app.kubernetes.io/managed-by": "helm",
                "app.kubernetes.io/name": "udm2-ausfauth",
                "app.kubernetes.io/version": "ueauthn-225.280.0"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Resources",
                    "id": "container-resources",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have resource limits and requests set. The --ignore-container-cpu-limit flag can be used to disable the requirement of having a CPU limit",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Image Tag",
                    "id": "container-image-tag",
                    "target_type": "Pod",
                    "comment": "Makes sure that a explicit non-latest tag is used",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Image Pull Policy",
                    "id": "container-image-pull-policy",
                    "target_type": "Pod",
                    "comment": "Makes sure that the pullPolicy is set to Always. This makes sure that imagePullSecrets are always validated.",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "ueauthn-mcc",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "ueauth-cip",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "ueauth-ueauth",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "ueauthn-h2p",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "ueauthn-admin",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Ephemeral Storage Request and Limit",
                    "id": "container-ephemeral-storage-request-and-limit",
                    "target_type": "Pod",
                    "comment": "Makes sure all pods have ephemeral-storage requests and limits set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "ueauthn-mcc",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "ueauth-cip",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "ueauth-ueauth",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "ueauthn-h2p",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "ueauthn-admin",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod NetworkPolicy",
                    "id": "pod-networkpolicy",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods are targeted by a NetworkPolicy",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod does not have a matching NetworkPolicy",
                        "description": "Create a NetworkPolicy that targets this pod to control who/what can communicate with this pod. Note, this feature needs to be supported by the CNI implementation used in the Kubernetes cluster to have an effect."
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod Probes",
                    "id": "pod-probes",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods have safe probe configurations",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod is not targeted by a service, skipping probe checks.",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context User Group ID",
                    "id": "container-security-context-user-group-id",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with valid UID and GID set ",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "ueauthn-mcc",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "ueauthn-mcc",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "ueauth-cip",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "ueauth-cip",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "ueauth-ueauth",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "ueauth-ueauth",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "ueauthn-h2p",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "ueauthn-h2p",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "ueauthn-admin",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "ueauthn-admin",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context Privileged",
                    "id": "container-security-context-privileged",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a unprivileged security context set",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Security Context ReadOnlyRootFilesystem",
                    "id": "container-security-context-readonlyrootfilesystem",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with read only filesystem set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "ueauthn-mcc",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "ueauthn-admin",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has PodDisruptionBudget",
                    "id": "deployment-has-poddisruptionbudget",
                    "target_type": "Deployment",
                    "comment": "Makes sure that all Deployments are targeted by a PDB",
                    "optional": false
                },
                "grade": 0,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment has less than 2 replicas",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has host PodAntiAffinity",
                    "id": "deployment-has-host-podantiaffinity",
                    "target_type": "Deployment",
                    "comment": "Makes sure that a podAntiAffinity has been set that prevents multiple pods from being scheduled on the same node. https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                    "optional": false
                },
                "grade": 0,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment has less than 2 replicas",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment targeted by HPA does not have replicas configured",
                    "id": "deployment-targeted-by-hpa-does-not-have-replicas-configured",
                    "target_type": "Deployment",
                    "comment": "Makes sure that Deployments using a HorizontalPodAutoscaler doesn't have a statically configured replica count set",
                    "optional": false
                },
                "grade": 10,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment is not targeted by a HorizontalPodAutoscaler",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment Pod Selector labels match template metadata labels",
                    "id": "deployment-pod-selector-labels-match-template-metadata-labels",
                    "target_type": "Deployment",
                    "comment": "Ensure the StatefulSet selector labels match the template metadata labels.",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/ueauthn/templates/deploymentUeauthn.yaml",
        "file_row": 1
    },
    {
        "object_name": "Deployment/apps/v1/udm2/udm2-udmuecm",
        "type_meta": {
            "kind": "Deployment",
            "apiVersion": "apps/v1"
        },
        "object_meta": {
            "name": "udm2-udmuecm",
            "namespace": "udm2",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/component": "UDM-UECM",
                "app.kubernetes.io/managed-by": "helm",
                "app.kubernetes.io/name": "udm2-udmuecm",
                "app.kubernetes.io/version": "uecm-225.280.0"
            },
            "annotations": {
                "description": "Defines deployment of UECM POD"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Resources",
                    "id": "container-resources",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have resource limits and requests set. The --ignore-container-cpu-limit flag can be used to disable the requirement of having a CPU limit",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Image Tag",
                    "id": "container-image-tag",
                    "target_type": "Pod",
                    "comment": "Makes sure that a explicit non-latest tag is used",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Security Context ReadOnlyRootFilesystem",
                    "id": "container-security-context-readonlyrootfilesystem",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with read only filesystem set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "uecm-mcc",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "uecm-admin",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Image Pull Policy",
                    "id": "container-image-pull-policy",
                    "target_type": "Pod",
                    "comment": "Makes sure that the pullPolicy is set to Always. This makes sure that imagePullSecrets are always validated.",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "uecm-mcc",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "uecm-cip",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "uecm-uecm",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "uecm-h2p",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "uecm-admin",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Ephemeral Storage Request and Limit",
                    "id": "container-ephemeral-storage-request-and-limit",
                    "target_type": "Pod",
                    "comment": "Makes sure all pods have ephemeral-storage requests and limits set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "uecm-mcc",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "uecm-cip",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "uecm-uecm",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "uecm-h2p",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "uecm-admin",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod NetworkPolicy",
                    "id": "pod-networkpolicy",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods are targeted by a NetworkPolicy",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod does not have a matching NetworkPolicy",
                        "description": "Create a NetworkPolicy that targets this pod to control who/what can communicate with this pod. Note, this feature needs to be supported by the CNI implementation used in the Kubernetes cluster to have an effect."
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod Probes",
                    "id": "pod-probes",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods have safe probe configurations",
                    "optional": false
                },
                "grade": 7,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "Container is missing a livenessProbe",
                        "description": "A livenessProbe can be used to restart the container if it's deadlocked or has crashed without exiting. It's only recommended to setup a livenessProbe if you really need one."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context User Group ID",
                    "id": "container-security-context-user-group-id",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with valid UID and GID set ",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "uecm-mcc",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "uecm-mcc",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "uecm-cip",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "uecm-cip",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "uecm-uecm",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "uecm-uecm",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "uecm-h2p",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "uecm-h2p",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "uecm-admin",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "uecm-admin",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context Privileged",
                    "id": "container-security-context-privileged",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a unprivileged security context set",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Deployment has PodDisruptionBudget",
                    "id": "deployment-has-poddisruptionbudget",
                    "target_type": "Deployment",
                    "comment": "Makes sure that all Deployments are targeted by a PDB",
                    "optional": false
                },
                "grade": 0,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment has less than 2 replicas",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has host PodAntiAffinity",
                    "id": "deployment-has-host-podantiaffinity",
                    "target_type": "Deployment",
                    "comment": "Makes sure that a podAntiAffinity has been set that prevents multiple pods from being scheduled on the same node. https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                    "optional": false
                },
                "grade": 0,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment has less than 2 replicas",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment targeted by HPA does not have replicas configured",
                    "id": "deployment-targeted-by-hpa-does-not-have-replicas-configured",
                    "target_type": "Deployment",
                    "comment": "Makes sure that Deployments using a HorizontalPodAutoscaler doesn't have a statically configured replica count set",
                    "optional": false
                },
                "grade": 10,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment is not targeted by a HorizontalPodAutoscaler",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment Pod Selector labels match template metadata labels",
                    "id": "deployment-pod-selector-labels-match-template-metadata-labels",
                    "target_type": "Deployment",
                    "comment": "Ensure the StatefulSet selector labels match the template metadata labels.",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/uecm/templates/deploymentUecm.yaml",
        "file_row": 1
    },
    {
        "object_name": "PodDisruptionBudget/policy/v1//udm2-udmee",
        "type_meta": {
            "kind": "PodDisruptionBudget",
            "apiVersion": "policy/v1"
        },
        "object_meta": {
            "name": "udm2-udmee",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/component": "UDM-EE",
                "app.kubernetes.io/managed-by": "helm",
                "app.kubernetes.io/version": "ee-225.280.0"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "PodDisruptionBudget has policy",
                    "id": "poddisruptionbudget-has-policy",
                    "target_type": "PodDisruptionBudget",
                    "comment": "Makes sure that PodDisruptionBudgets specify minAvailable or maxUnavailable",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/ee/templates/poddisruptionbudget.yaml",
        "file_row": 1
    },
    {
        "object_name": "Service/v1//udm2-ccasapache",
        "type_meta": {
            "kind": "Service",
            "apiVersion": "v1"
        },
        "object_meta": {
            "name": "udm2-ccasapache",
            "creationTimestamp": null,
            "labels": {
                "app": "udm2-ccasapache",
                "heritage": "Helm",
                "release": "udm2"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Targets Pod",
                    "id": "service-targets-pod",
                    "target_type": "Service",
                    "comment": "Makes sure that all Services targets a Pod",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Type",
                    "id": "service-type",
                    "target_type": "Service",
                    "comment": "Makes sure that the Service type is not NodePort",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/ccasapache/templates/cassandra_svc.yaml",
        "file_row": 1
    },
    {
        "object_name": "Service/v1//nudm-ueau",
        "type_meta": {
            "kind": "Service",
            "apiVersion": "v1"
        },
        "object_meta": {
            "name": "nudm-ueau",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/name": "udm2-udmueau"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Type",
                    "id": "service-type",
                    "target_type": "Service",
                    "comment": "Makes sure that the Service type is not NodePort",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Targets Pod",
                    "id": "service-targets-pod",
                    "target_type": "Service",
                    "comment": "Makes sure that all Services targets a Pod",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The services selector does not match any pods",
                        "description": ""
                    }
                ]
            }
        ],
        "file_name": "reg-helm-charts/charts/udmueauth/templates/service.yaml",
        "file_row": 1
    },
    {
        "object_name": "Service/v1/udm2/arpf",
        "type_meta": {
            "kind": "Service",
            "apiVersion": "v1"
        },
        "object_meta": {
            "name": "arpf",
            "namespace": "udm2",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/name": "udm2-udmarpf"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Targets Pod",
                    "id": "service-targets-pod",
                    "target_type": "Service",
                    "comment": "Makes sure that all Services targets a Pod",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Type",
                    "id": "service-type",
                    "target_type": "Service",
                    "comment": "Makes sure that the Service type is not NodePort",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/arpf/templates/service.yaml",
        "file_row": 1
    },
    {
        "object_name": "Service/v1//sim",
        "type_meta": {
            "kind": "Service",
            "apiVersion": "v1"
        },
        "object_meta": {
            "name": "sim",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/name": "udm2-udmsim"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Targets Pod",
                    "id": "service-targets-pod",
                    "target_type": "Service",
                    "comment": "Makes sure that all Services targets a Pod",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The services selector does not match any pods",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Service Type",
                    "id": "service-type",
                    "target_type": "Service",
                    "comment": "Makes sure that the Service type is not NodePort",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/sim/templates/service.yaml",
        "file_row": 1
    },
    {
        "object_name": "Service/v1//trigger",
        "type_meta": {
            "kind": "Service",
            "apiVersion": "v1"
        },
        "object_meta": {
            "name": "trigger",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/name": "udm2-udmtrigger"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Targets Pod",
                    "id": "service-targets-pod",
                    "target_type": "Service",
                    "comment": "Makes sure that all Services targets a Pod",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The services selector does not match any pods",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Service Type",
                    "id": "service-type",
                    "target_type": "Service",
                    "comment": "Makes sure that the Service type is not NodePort",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/trigger/templates/service.yaml",
        "file_row": 1
    },
    {
        "object_name": "Deployment/apps/v1/udm2/udm2-vnfclusterenvoylb",
        "type_meta": {
            "kind": "Deployment",
            "apiVersion": "apps/v1"
        },
        "object_meta": {
            "name": "udm2-vnfclusterenvoylb",
            "namespace": "udm2",
            "creationTimestamp": null,
            "labels": {
                "app": "vnfclusterenvoylb-label",
                "app.kubernetes.io/name": "udm2-vnfclusterenvoylb",
                "chart": "vnfclusterenvoylb-225.280.0",
                "heritage": "Helm",
                "namespace": "udm2",
                "release": "udm2"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Resources",
                    "id": "container-resources",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have resource limits and requests set. The --ignore-container-cpu-limit flag can be used to disable the requirement of having a CPU limit",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Image Tag",
                    "id": "container-image-tag",
                    "target_type": "Pod",
                    "comment": "Makes sure that a explicit non-latest tag is used",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Security Context User Group ID",
                    "id": "container-security-context-user-group-id",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with valid UID and GID set ",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "vnfenvoylb",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "vnfenvoylb",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context Privileged",
                    "id": "container-security-context-privileged",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a unprivileged security context set",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Security Context ReadOnlyRootFilesystem",
                    "id": "container-security-context-readonlyrootfilesystem",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with read only filesystem set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "vnfenvoylb",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Image Pull Policy",
                    "id": "container-image-pull-policy",
                    "target_type": "Pod",
                    "comment": "Makes sure that the pullPolicy is set to Always. This makes sure that imagePullSecrets are always validated.",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "vnfenvoylb",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Ephemeral Storage Request and Limit",
                    "id": "container-ephemeral-storage-request-and-limit",
                    "target_type": "Pod",
                    "comment": "Makes sure all pods have ephemeral-storage requests and limits set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fluent-bit",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "vnfenvoylb",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod NetworkPolicy",
                    "id": "pod-networkpolicy",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods are targeted by a NetworkPolicy",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod does not have a matching NetworkPolicy",
                        "description": "Create a NetworkPolicy that targets this pod to control who/what can communicate with this pod. Note, this feature needs to be supported by the CNI implementation used in the Kubernetes cluster to have an effect."
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod Probes",
                    "id": "pod-probes",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods have safe probe configurations",
                    "optional": false
                },
                "grade": 7,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "Container is missing a livenessProbe",
                        "description": "A livenessProbe can be used to restart the container if it's deadlocked or has crashed without exiting. It's only recommended to setup a livenessProbe if you really need one."
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has PodDisruptionBudget",
                    "id": "deployment-has-poddisruptionbudget",
                    "target_type": "Deployment",
                    "comment": "Makes sure that all Deployments are targeted by a PDB",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "No matching PodDisruptionBudget was found",
                        "description": "It's recommended to define a PodDisruptionBudget to avoid unexpected downtime during Kubernetes maintenance operations, such as when draining a node."
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has host PodAntiAffinity",
                    "id": "deployment-has-host-podantiaffinity",
                    "target_type": "Deployment",
                    "comment": "Makes sure that a podAntiAffinity has been set that prevents multiple pods from being scheduled on the same node. https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Deployment targeted by HPA does not have replicas configured",
                    "id": "deployment-targeted-by-hpa-does-not-have-replicas-configured",
                    "target_type": "Deployment",
                    "comment": "Makes sure that Deployments using a HorizontalPodAutoscaler doesn't have a statically configured replica count set",
                    "optional": false
                },
                "grade": 10,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment is not targeted by a HorizontalPodAutoscaler",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment Pod Selector labels match template metadata labels",
                    "id": "deployment-pod-selector-labels-match-template-metadata-labels",
                    "target_type": "Deployment",
                    "comment": "Ensure the StatefulSet selector labels match the template metadata labels.",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/vnfclusterenvoylb/templates/deployment.yaml",
        "file_row": 1
    },
    {
        "object_name": "StatefulSet/apps/v1//udm2-ccasapache",
        "type_meta": {
            "kind": "StatefulSet",
            "apiVersion": "apps/v1"
        },
        "object_meta": {
            "name": "udm2-ccasapache",
            "creationTimestamp": null,
            "labels": {
                "app": "udm2-ccasapache",
                "heritage": "Helm",
                "release": "udm2"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Security Context ReadOnlyRootFilesystem",
                    "id": "container-security-context-readonlyrootfilesystem",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with read only filesystem set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "udm2-ccasapache-config",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "udm2-ccasapache",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Image Pull Policy",
                    "id": "container-image-pull-policy",
                    "target_type": "Pod",
                    "comment": "Makes sure that the pullPolicy is set to Always. This makes sure that imagePullSecrets are always validated.",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "udm2-ccasapache-config",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "udm2-ccasapache",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Ephemeral Storage Request and Limit",
                    "id": "container-ephemeral-storage-request-and-limit",
                    "target_type": "Pod",
                    "comment": "Makes sure all pods have ephemeral-storage requests and limits set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "udm2-ccasapache-config",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "udm2-ccasapache",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod NetworkPolicy",
                    "id": "pod-networkpolicy",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods are targeted by a NetworkPolicy",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod does not have a matching NetworkPolicy",
                        "description": "Create a NetworkPolicy that targets this pod to control who/what can communicate with this pod. Note, this feature needs to be supported by the CNI implementation used in the Kubernetes cluster to have an effect."
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod Probes",
                    "id": "pod-probes",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods have safe probe configurations",
                    "optional": false
                },
                "grade": 7,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "Container is missing a livenessProbe",
                        "description": "A livenessProbe can be used to restart the container if it's deadlocked or has crashed without exiting. It's only recommended to setup a livenessProbe if you really need one."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context User Group ID",
                    "id": "container-security-context-user-group-id",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with valid UID and GID set ",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "udm2-ccasapache-config",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "udm2-ccasapache-config",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "udm2-ccasapache",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "udm2-ccasapache",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context Privileged",
                    "id": "container-security-context-privileged",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a unprivileged security context set",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Resources",
                    "id": "container-resources",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have resource limits and requests set. The --ignore-container-cpu-limit flag can be used to disable the requirement of having a CPU limit",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Image Tag",
                    "id": "container-image-tag",
                    "target_type": "Pod",
                    "comment": "Makes sure that a explicit non-latest tag is used",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "StatefulSet has PodDisruptionBudget",
                    "id": "statefulset-has-poddisruptionbudget",
                    "target_type": "StatefulSet",
                    "comment": "Makes sure that all StatefulSets are targeted by a PDB",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "StatefulSet has host PodAntiAffinity",
                    "id": "statefulset-has-host-podantiaffinity",
                    "target_type": "StatefulSet",
                    "comment": "Makes sure that a podAntiAffinity has been set that prevents multiple pods from being scheduled on the same node. https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                    "optional": false
                },
                "grade": 5,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "StatefulSet does not have a host podAntiAffinity set",
                        "description": "It's recommended to set a podAntiAffinity that stops multiple pods from a statefulset from being scheduled on the same node. This increases availability in case the node becomes unavailable."
                    }
                ]
            },
            {
                "check": {
                    "name": "StatefulSet has ServiceName",
                    "id": "statefulset-has-servicename",
                    "target_type": "StatefulSet",
                    "comment": "Makes sure that StatefulSets have an existing headless serviceName.",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "StatefulSet does not have a valid serviceName",
                        "description": "StatefulSets currently require a Headless Service to be responsible for the network identity of the Pods. You are responsible for creating this Service. https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#limitations"
                    }
                ]
            },
            {
                "check": {
                    "name": "StatefulSet Pod Selector labels match template metadata labels",
                    "id": "statefulset-pod-selector-labels-match-template-metadata-labels",
                    "target_type": "StatefulSet",
                    "comment": "Ensure the StatefulSet selector labels match the template metadata labels.",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/ccasapache/templates/cassandra-statefulset.yaml",
        "file_row": 1
    },
    {
        "object_name": "PodDisruptionBudget/policy/v1//udm2-udmmt",
        "type_meta": {
            "kind": "PodDisruptionBudget",
            "apiVersion": "policy/v1"
        },
        "object_meta": {
            "name": "udm2-udmmt",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/component": "UDM-MT",
                "app.kubernetes.io/managed-by": "helm",
                "app.kubernetes.io/version": "mt-225.280.0"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "PodDisruptionBudget has policy",
                    "id": "poddisruptionbudget-has-policy",
                    "target_type": "PodDisruptionBudget",
                    "comment": "Makes sure that PodDisruptionBudgets specify minAvailable or maxUnavailable",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/mt/templates/poddisruptionbudget.yaml",
        "file_row": 1
    },
    {
        "object_name": "PodDisruptionBudget/policy/v1//udm2-udmsim",
        "type_meta": {
            "kind": "PodDisruptionBudget",
            "apiVersion": "policy/v1"
        },
        "object_meta": {
            "name": "udm2-udmsim",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/component": "SIM",
                "app.kubernetes.io/managed-by": "helm",
                "app.kubernetes.io/version": "sim-225.280.0"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "PodDisruptionBudget has policy",
                    "id": "poddisruptionbudget-has-policy",
                    "target_type": "PodDisruptionBudget",
                    "comment": "Makes sure that PodDisruptionBudgets specify minAvailable or maxUnavailable",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/sim/templates/poddisruptionbudget.yaml",
        "file_row": 1
    },
    {
        "object_name": "Service/v1/udm2/nudm-sdm",
        "type_meta": {
            "kind": "Service",
            "apiVersion": "v1"
        },
        "object_meta": {
            "name": "nudm-sdm",
            "namespace": "udm2",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/name": "udm2-udmsdm"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Type",
                    "id": "service-type",
                    "target_type": "Service",
                    "comment": "Makes sure that the Service type is not NodePort",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Targets Pod",
                    "id": "service-targets-pod",
                    "target_type": "Service",
                    "comment": "Makes sure that all Services targets a Pod",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/sdm/templates/service.yaml",
        "file_row": 1
    },
    {
        "object_name": "PodDisruptionBudget/policy/v1//udm2-vnfclusterenvoylb",
        "type_meta": {
            "kind": "PodDisruptionBudget",
            "apiVersion": "policy/v1"
        },
        "object_meta": {
            "name": "udm2-vnfclusterenvoylb",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/component": "VNFCLUSTERENVOYLB",
                "app.kubernetes.io/managed-by": "helm",
                "app.kubernetes.io/version": "vnfclusterenvoylb-225.280.0"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "PodDisruptionBudget has policy",
                    "id": "poddisruptionbudget-has-policy",
                    "target_type": "PodDisruptionBudget",
                    "comment": "Makes sure that PodDisruptionBudgets specify minAvailable or maxUnavailable",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/vnfclusterenvoylb/templates/poddisruptionbudget.yaml",
        "file_row": 1
    },
    {
        "object_name": "Service/v1//lag",
        "type_meta": {
            "kind": "Service",
            "apiVersion": "v1"
        },
        "object_meta": {
            "name": "lag",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/name": "udm2-lag"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Targets Pod",
                    "id": "service-targets-pod",
                    "target_type": "Service",
                    "comment": "Makes sure that all Services targets a Pod",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The services selector does not match any pods",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Service Type",
                    "id": "service-type",
                    "target_type": "Service",
                    "comment": "Makes sure that the Service type is not NodePort",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/nim/templates/lagservice.yaml",
        "file_row": 1
    },
    {
        "object_name": "Deployment/apps/v1//udm2-http2lb",
        "type_meta": {
            "kind": "Deployment",
            "apiVersion": "apps/v1"
        },
        "object_meta": {
            "name": "udm2-http2lb",
            "creationTimestamp": null,
            "labels": {
                "app": "http2lb",
                "app.kubernetes.io/name": "udm2-http2lb",
                "chart": "http2lb-225.280.0",
                "heritage": "Helm",
                "release": "udm2"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Resources",
                    "id": "container-resources",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have resource limits and requests set. The --ignore-container-cpu-limit flag can be used to disable the requirement of having a CPU limit",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Image Tag",
                    "id": "container-image-tag",
                    "target_type": "Pod",
                    "comment": "Makes sure that a explicit non-latest tag is used",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Image Pull Policy",
                    "id": "container-image-pull-policy",
                    "target_type": "Pod",
                    "comment": "Makes sure that the pullPolicy is set to Always. This makes sure that imagePullSecrets are always validated.",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "http2lb-servicereginit",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "http2lb-http2lb",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "http2lb-mcc",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "http2lb-mgmt",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    },
                    {
                        "path": "http2lb-admin",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Ephemeral Storage Request and Limit",
                    "id": "container-ephemeral-storage-request-and-limit",
                    "target_type": "Pod",
                    "comment": "Makes sure all pods have ephemeral-storage requests and limits set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "http2lb-servicereginit",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "http2lb-http2lb",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "http2lb-mcc",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "http2lb-mgmt",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    },
                    {
                        "path": "http2lb-admin",
                        "summary": "Ephemeral Storage limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.ephemeral-storage"
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod NetworkPolicy",
                    "id": "pod-networkpolicy",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods are targeted by a NetworkPolicy",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod does not have a matching NetworkPolicy",
                        "description": "Create a NetworkPolicy that targets this pod to control who/what can communicate with this pod. Note, this feature needs to be supported by the CNI implementation used in the Kubernetes cluster to have an effect."
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod Probes",
                    "id": "pod-probes",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods have safe probe configurations",
                    "optional": false
                },
                "grade": 7,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "Container is missing a livenessProbe",
                        "description": "A livenessProbe can be used to restart the container if it's deadlocked or has crashed without exiting. It's only recommended to setup a livenessProbe if you really need one."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context User Group ID",
                    "id": "container-security-context-user-group-id",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with valid UID and GID set ",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "http2lb-servicereginit",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "http2lb-servicereginit",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "http2lb-http2lb",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "http2lb-http2lb",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "http2lb-mcc",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "http2lb-mcc",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "http2lb-mgmt",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "http2lb-mgmt",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    },
                    {
                        "path": "http2lb-admin",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "http2lb-admin",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context Privileged",
                    "id": "container-security-context-privileged",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a unprivileged security context set",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Security Context ReadOnlyRootFilesystem",
                    "id": "container-security-context-readonlyrootfilesystem",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have a security context with read only filesystem set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "http2lb-servicereginit",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "http2lb-http2lb",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "udmenvoy",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "fluent-bit",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "http2lb-mcc",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "http2lb-mgmt",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    },
                    {
                        "path": "http2lb-admin",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has host PodAntiAffinity",
                    "id": "deployment-has-host-podantiaffinity",
                    "target_type": "Deployment",
                    "comment": "Makes sure that a podAntiAffinity has been set that prevents multiple pods from being scheduled on the same node. https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Deployment targeted by HPA does not have replicas configured",
                    "id": "deployment-targeted-by-hpa-does-not-have-replicas-configured",
                    "target_type": "Deployment",
                    "comment": "Makes sure that Deployments using a HorizontalPodAutoscaler doesn't have a statically configured replica count set",
                    "optional": false
                },
                "grade": 10,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment is not targeted by a HorizontalPodAutoscaler",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment Pod Selector labels match template metadata labels",
                    "id": "deployment-pod-selector-labels-match-template-metadata-labels",
                    "target_type": "Deployment",
                    "comment": "Ensure the StatefulSet selector labels match the template metadata labels.",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Deployment has PodDisruptionBudget",
                    "id": "deployment-has-poddisruptionbudget",
                    "target_type": "Deployment",
                    "comment": "Makes sure that all Deployments are targeted by a PDB",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/http2lb/templates/deployment.yaml",
        "file_row": 1
    },
    {
        "object_name": "Service/v1//nudm-ee",
        "type_meta": {
            "kind": "Service",
            "apiVersion": "v1"
        },
        "object_meta": {
            "name": "nudm-ee",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/name": "udm2-udmee"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Targets Pod",
                    "id": "service-targets-pod",
                    "target_type": "Service",
                    "comment": "Makes sure that all Services targets a Pod",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The services selector does not match any pods",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Service Type",
                    "id": "service-type",
                    "target_type": "Service",
                    "comment": "Makes sure that the Service type is not NodePort",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/ee/templates/service.yaml",
        "file_row": 1
    },
    {
        "object_name": "Service/v1/udm2/nudm-mt",
        "type_meta": {
            "kind": "Service",
            "apiVersion": "v1"
        },
        "object_meta": {
            "name": "nudm-mt",
            "namespace": "udm2",
            "creationTimestamp": null,
            "labels": {
                "app.kubernetes.io/name": "udm2-udmmt"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Targets Pod",
                    "id": "service-targets-pod",
                    "target_type": "Service",
                    "comment": "Makes sure that all Services targets a Pod",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Type",
                    "id": "service-type",
                    "target_type": "Service",
                    "comment": "Makes sure that the Service type is not NodePort",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/mt/templates/service.yaml",
        "file_row": 1
    },
    {
        "object_name": "Service/v1/udm2/vnfclusterenvoylb-service",
        "type_meta": {
            "kind": "Service",
            "apiVersion": "v1"
        },
        "object_meta": {
            "name": "vnfclusterenvoylb-service",
            "namespace": "udm2",
            "creationTimestamp": null,
            "labels": {
                "app": "vnfclusterenvoylb-service-label"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Targets Pod",
                    "id": "service-targets-pod",
                    "target_type": "Service",
                    "comment": "Makes sure that all Services targets a Pod",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Type",
                    "id": "service-type",
                    "target_type": "Service",
                    "comment": "Makes sure that the Service type is not NodePort",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "reg-helm-charts/charts/vnfclusterenvoylb/templates/service.yaml",
        "file_row": 1
    }
]